//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Parser.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


    namespace OLC2_Proyecto2_201612218.src.Backend.parser;
     using OLC2_Proyecto2_201612218.src.Backend.Interprete.Utils;
     using OLC2_Proyecto2_201612218.src.Backend.Interprete.Abstracts;
     using OLC2_Proyecto2_201612218.src.Backend.Interprete.Expresiones;
     using OLC2_Proyecto2_201612218.src.Backend.Interprete.Instrucciones;
     using MiSwitch = OLC2_Proyecto2_201612218.src.Backend.Interprete.Instrucciones.Switch;
     

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public partial class ParserLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, KW_int=30, KW_float=31, 
		KW_string=32, KW_bool=33, KW_rune=34, KW_println=35, KW_main=36, KW_func=37, 
		KW_true=38, KW_false=39, KW_nil=40, KW_break=41, KW_continue=42, KW_return=43, 
		KW_var=44, KW_if=45, KW_for=46, KW_switch=47, KW_else=48, KW_range=49, 
		KW_case=50, KW_default=51, KW_atoi=52, KW_parsefloat=53, KW_typeof=54, 
		KW_index=55, KW_join=56, KW_len=57, KW_append=58, TK_rune=59, Tk_string=60, 
		Tk_int=61, Tk_float=62, Tk_id=63, IGNORE=64, SALTO=65, COMENTARIOS=66;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "UNUSED", "CONTENT", "ID", "RUNE", 
		"STRING", "INTEGER", "FLOAT", "COMMENTS", "COMMENTM", "KW_int", "KW_float", 
		"KW_string", "KW_bool", "KW_rune", "KW_println", "KW_main", "KW_func", 
		"KW_true", "KW_false", "KW_nil", "KW_break", "KW_continue", "KW_return", 
		"KW_var", "KW_if", "KW_for", "KW_switch", "KW_else", "KW_range", "KW_case", 
		"KW_default", "KW_atoi", "KW_parsefloat", "KW_typeof", "KW_index", "KW_join", 
		"KW_len", "KW_append", "TK_rune", "Tk_string", "Tk_int", "Tk_float", "Tk_id", 
		"IGNORE", "SALTO", "COMENTARIOS"
	};


	public ParserLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public ParserLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'('", "')'", "','", "'{'", "'}'", "';'", "'='", "':='", "'+='", 
		"'-='", "'++'", "'--'", "'['", "']'", "':'", "'-'", "'*'", "'/'", "'%'", 
		"'+'", "'<='", "'>='", "'<'", "'>'", "'=='", "'!='", "'!'", "'&&'", "'||'", 
		"'int'", "'float64'", "'string'", "'bool'", "'rune'", "'fmt.Println'", 
		"'main'", "'func'", "'true'", "'false'", "'nil'", "'break'", "'continue'", 
		"'return'", "'var'", "'if'", "'for'", "'switch'", "'else'", "'range'", 
		"'case'", "'default'", "'strconv.Atoi'", "'strconv.ParseFloat'", "'reflect.TypeOf'", 
		"'slices.Index'", "'strings.Join'", "'len'", "'append'", null, null, null, 
		null, null, null, "'\\n'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, "KW_int", "KW_float", "KW_string", 
		"KW_bool", "KW_rune", "KW_println", "KW_main", "KW_func", "KW_true", "KW_false", 
		"KW_nil", "KW_break", "KW_continue", "KW_return", "KW_var", "KW_if", "KW_for", 
		"KW_switch", "KW_else", "KW_range", "KW_case", "KW_default", "KW_atoi", 
		"KW_parsefloat", "KW_typeof", "KW_index", "KW_join", "KW_len", "KW_append", 
		"TK_rune", "Tk_string", "Tk_int", "Tk_float", "Tk_id", "IGNORE", "SALTO", 
		"COMENTARIOS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Parser.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static ParserLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,66,551,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,1,0,1,0,1,1,1,1,1,2,1,2,1,
		3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,1,10,
		1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,
		1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,20,1,21,1,21,1,21,1,22,
		1,22,1,23,1,23,1,24,1,24,1,24,1,25,1,25,1,25,1,26,1,26,1,27,1,27,1,27,
		1,28,1,28,1,28,1,29,4,29,222,8,29,11,29,12,29,223,1,30,1,30,1,30,3,30,
		229,8,30,1,31,5,31,232,8,31,10,31,12,31,235,9,31,1,31,1,31,5,31,239,8,
		31,10,31,12,31,242,9,31,1,32,1,32,1,32,1,32,1,33,1,33,5,33,250,8,33,10,
		33,12,33,253,9,33,1,33,1,33,1,34,4,34,258,8,34,11,34,12,34,259,1,35,4,
		35,263,8,35,11,35,12,35,264,1,35,1,35,4,35,269,8,35,11,35,12,35,270,1,
		36,1,36,1,36,1,36,5,36,277,8,36,10,36,12,36,280,9,36,1,37,1,37,1,37,5,
		37,285,8,37,10,37,12,37,288,9,37,1,37,4,37,291,8,37,11,37,12,37,292,1,
		37,1,37,5,37,297,8,37,10,37,12,37,300,9,37,1,37,4,37,303,8,37,11,37,12,
		37,304,5,37,307,8,37,10,37,12,37,310,9,37,1,37,1,37,1,38,1,38,1,38,1,38,
		1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,40,
		1,40,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,
		1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,
		1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,
		1,47,1,47,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,
		1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,1,51,1,51,
		1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,55,1,55,1,55,
		1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,57,
		1,57,1,58,1,58,1,58,1,58,1,58,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,
		1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,61,
		1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,
		1,61,1,61,1,61,1,61,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,
		1,62,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,
		1,63,1,63,1,63,1,63,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,64,
		1,64,1,64,1,64,1,65,1,65,1,65,1,65,1,66,1,66,1,66,1,66,1,66,1,66,1,66,
		1,67,1,67,1,68,1,68,1,69,1,69,1,70,1,70,1,71,1,71,1,72,1,72,1,72,1,72,
		1,73,1,73,1,73,1,73,1,74,1,74,3,74,548,8,74,1,74,1,74,0,0,75,1,1,3,2,5,
		3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,
		33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,
		57,29,59,0,61,0,63,0,65,0,67,0,69,0,71,0,73,0,75,0,77,30,79,31,81,32,83,
		33,85,34,87,35,89,36,91,37,93,38,95,39,97,40,99,41,101,42,103,43,105,44,
		107,45,109,46,111,47,113,48,115,49,117,50,119,51,121,52,123,53,125,54,
		127,55,129,56,131,57,133,58,135,59,137,60,139,61,141,62,143,63,145,64,
		147,65,149,66,1,0,9,3,0,9,9,13,13,32,32,3,0,10,10,34,34,92,92,2,0,65,90,
		97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,2,0,10,10,13,13,1,0,47,47,
		1,0,42,42,2,0,42,42,47,47,556,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,
		1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,
		0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,
		1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,
		0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
		1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,
		0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,
		1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,
		0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,
		0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,
		0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,
		0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,
		0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,1,151,1,0,
		0,0,3,153,1,0,0,0,5,155,1,0,0,0,7,157,1,0,0,0,9,159,1,0,0,0,11,161,1,0,
		0,0,13,163,1,0,0,0,15,165,1,0,0,0,17,168,1,0,0,0,19,171,1,0,0,0,21,174,
		1,0,0,0,23,177,1,0,0,0,25,180,1,0,0,0,27,182,1,0,0,0,29,184,1,0,0,0,31,
		186,1,0,0,0,33,188,1,0,0,0,35,190,1,0,0,0,37,192,1,0,0,0,39,194,1,0,0,
		0,41,196,1,0,0,0,43,199,1,0,0,0,45,202,1,0,0,0,47,204,1,0,0,0,49,206,1,
		0,0,0,51,209,1,0,0,0,53,212,1,0,0,0,55,214,1,0,0,0,57,217,1,0,0,0,59,221,
		1,0,0,0,61,228,1,0,0,0,63,233,1,0,0,0,65,243,1,0,0,0,67,247,1,0,0,0,69,
		257,1,0,0,0,71,262,1,0,0,0,73,272,1,0,0,0,75,281,1,0,0,0,77,313,1,0,0,
		0,79,317,1,0,0,0,81,325,1,0,0,0,83,332,1,0,0,0,85,337,1,0,0,0,87,342,1,
		0,0,0,89,354,1,0,0,0,91,359,1,0,0,0,93,364,1,0,0,0,95,369,1,0,0,0,97,375,
		1,0,0,0,99,379,1,0,0,0,101,385,1,0,0,0,103,394,1,0,0,0,105,401,1,0,0,0,
		107,405,1,0,0,0,109,408,1,0,0,0,111,412,1,0,0,0,113,419,1,0,0,0,115,424,
		1,0,0,0,117,430,1,0,0,0,119,435,1,0,0,0,121,443,1,0,0,0,123,456,1,0,0,
		0,125,475,1,0,0,0,127,490,1,0,0,0,129,503,1,0,0,0,131,516,1,0,0,0,133,
		520,1,0,0,0,135,527,1,0,0,0,137,529,1,0,0,0,139,531,1,0,0,0,141,533,1,
		0,0,0,143,535,1,0,0,0,145,537,1,0,0,0,147,541,1,0,0,0,149,547,1,0,0,0,
		151,152,5,40,0,0,152,2,1,0,0,0,153,154,5,41,0,0,154,4,1,0,0,0,155,156,
		5,44,0,0,156,6,1,0,0,0,157,158,5,123,0,0,158,8,1,0,0,0,159,160,5,125,0,
		0,160,10,1,0,0,0,161,162,5,59,0,0,162,12,1,0,0,0,163,164,5,61,0,0,164,
		14,1,0,0,0,165,166,5,58,0,0,166,167,5,61,0,0,167,16,1,0,0,0,168,169,5,
		43,0,0,169,170,5,61,0,0,170,18,1,0,0,0,171,172,5,45,0,0,172,173,5,61,0,
		0,173,20,1,0,0,0,174,175,5,43,0,0,175,176,5,43,0,0,176,22,1,0,0,0,177,
		178,5,45,0,0,178,179,5,45,0,0,179,24,1,0,0,0,180,181,5,91,0,0,181,26,1,
		0,0,0,182,183,5,93,0,0,183,28,1,0,0,0,184,185,5,58,0,0,185,30,1,0,0,0,
		186,187,5,45,0,0,187,32,1,0,0,0,188,189,5,42,0,0,189,34,1,0,0,0,190,191,
		5,47,0,0,191,36,1,0,0,0,192,193,5,37,0,0,193,38,1,0,0,0,194,195,5,43,0,
		0,195,40,1,0,0,0,196,197,5,60,0,0,197,198,5,61,0,0,198,42,1,0,0,0,199,
		200,5,62,0,0,200,201,5,61,0,0,201,44,1,0,0,0,202,203,5,60,0,0,203,46,1,
		0,0,0,204,205,5,62,0,0,205,48,1,0,0,0,206,207,5,61,0,0,207,208,5,61,0,
		0,208,50,1,0,0,0,209,210,5,33,0,0,210,211,5,61,0,0,211,52,1,0,0,0,212,
		213,5,33,0,0,213,54,1,0,0,0,214,215,5,38,0,0,215,216,5,38,0,0,216,56,1,
		0,0,0,217,218,5,124,0,0,218,219,5,124,0,0,219,58,1,0,0,0,220,222,7,0,0,
		0,221,220,1,0,0,0,222,223,1,0,0,0,223,221,1,0,0,0,223,224,1,0,0,0,224,
		60,1,0,0,0,225,229,8,1,0,0,226,227,5,92,0,0,227,229,9,0,0,0,228,225,1,
		0,0,0,228,226,1,0,0,0,229,62,1,0,0,0,230,232,5,95,0,0,231,230,1,0,0,0,
		232,235,1,0,0,0,233,231,1,0,0,0,233,234,1,0,0,0,234,236,1,0,0,0,235,233,
		1,0,0,0,236,240,7,2,0,0,237,239,7,3,0,0,238,237,1,0,0,0,239,242,1,0,0,
		0,240,238,1,0,0,0,240,241,1,0,0,0,241,64,1,0,0,0,242,240,1,0,0,0,243,244,
		5,39,0,0,244,245,3,61,30,0,245,246,5,39,0,0,246,66,1,0,0,0,247,251,5,34,
		0,0,248,250,3,61,30,0,249,248,1,0,0,0,250,253,1,0,0,0,251,249,1,0,0,0,
		251,252,1,0,0,0,252,254,1,0,0,0,253,251,1,0,0,0,254,255,5,34,0,0,255,68,
		1,0,0,0,256,258,7,4,0,0,257,256,1,0,0,0,258,259,1,0,0,0,259,257,1,0,0,
		0,259,260,1,0,0,0,260,70,1,0,0,0,261,263,7,4,0,0,262,261,1,0,0,0,263,264,
		1,0,0,0,264,262,1,0,0,0,264,265,1,0,0,0,265,266,1,0,0,0,266,268,5,46,0,
		0,267,269,7,4,0,0,268,267,1,0,0,0,269,270,1,0,0,0,270,268,1,0,0,0,270,
		271,1,0,0,0,271,72,1,0,0,0,272,273,5,47,0,0,273,274,5,47,0,0,274,278,1,
		0,0,0,275,277,8,5,0,0,276,275,1,0,0,0,277,280,1,0,0,0,278,276,1,0,0,0,
		278,279,1,0,0,0,279,74,1,0,0,0,280,278,1,0,0,0,281,282,7,6,0,0,282,286,
		7,7,0,0,283,285,8,7,0,0,284,283,1,0,0,0,285,288,1,0,0,0,286,284,1,0,0,
		0,286,287,1,0,0,0,287,290,1,0,0,0,288,286,1,0,0,0,289,291,7,7,0,0,290,
		289,1,0,0,0,291,292,1,0,0,0,292,290,1,0,0,0,292,293,1,0,0,0,293,308,1,
		0,0,0,294,298,8,8,0,0,295,297,8,7,0,0,296,295,1,0,0,0,297,300,1,0,0,0,
		298,296,1,0,0,0,298,299,1,0,0,0,299,302,1,0,0,0,300,298,1,0,0,0,301,303,
		7,7,0,0,302,301,1,0,0,0,303,304,1,0,0,0,304,302,1,0,0,0,304,305,1,0,0,
		0,305,307,1,0,0,0,306,294,1,0,0,0,307,310,1,0,0,0,308,306,1,0,0,0,308,
		309,1,0,0,0,309,311,1,0,0,0,310,308,1,0,0,0,311,312,7,6,0,0,312,76,1,0,
		0,0,313,314,5,105,0,0,314,315,5,110,0,0,315,316,5,116,0,0,316,78,1,0,0,
		0,317,318,5,102,0,0,318,319,5,108,0,0,319,320,5,111,0,0,320,321,5,97,0,
		0,321,322,5,116,0,0,322,323,5,54,0,0,323,324,5,52,0,0,324,80,1,0,0,0,325,
		326,5,115,0,0,326,327,5,116,0,0,327,328,5,114,0,0,328,329,5,105,0,0,329,
		330,5,110,0,0,330,331,5,103,0,0,331,82,1,0,0,0,332,333,5,98,0,0,333,334,
		5,111,0,0,334,335,5,111,0,0,335,336,5,108,0,0,336,84,1,0,0,0,337,338,5,
		114,0,0,338,339,5,117,0,0,339,340,5,110,0,0,340,341,5,101,0,0,341,86,1,
		0,0,0,342,343,5,102,0,0,343,344,5,109,0,0,344,345,5,116,0,0,345,346,5,
		46,0,0,346,347,5,80,0,0,347,348,5,114,0,0,348,349,5,105,0,0,349,350,5,
		110,0,0,350,351,5,116,0,0,351,352,5,108,0,0,352,353,5,110,0,0,353,88,1,
		0,0,0,354,355,5,109,0,0,355,356,5,97,0,0,356,357,5,105,0,0,357,358,5,110,
		0,0,358,90,1,0,0,0,359,360,5,102,0,0,360,361,5,117,0,0,361,362,5,110,0,
		0,362,363,5,99,0,0,363,92,1,0,0,0,364,365,5,116,0,0,365,366,5,114,0,0,
		366,367,5,117,0,0,367,368,5,101,0,0,368,94,1,0,0,0,369,370,5,102,0,0,370,
		371,5,97,0,0,371,372,5,108,0,0,372,373,5,115,0,0,373,374,5,101,0,0,374,
		96,1,0,0,0,375,376,5,110,0,0,376,377,5,105,0,0,377,378,5,108,0,0,378,98,
		1,0,0,0,379,380,5,98,0,0,380,381,5,114,0,0,381,382,5,101,0,0,382,383,5,
		97,0,0,383,384,5,107,0,0,384,100,1,0,0,0,385,386,5,99,0,0,386,387,5,111,
		0,0,387,388,5,110,0,0,388,389,5,116,0,0,389,390,5,105,0,0,390,391,5,110,
		0,0,391,392,5,117,0,0,392,393,5,101,0,0,393,102,1,0,0,0,394,395,5,114,
		0,0,395,396,5,101,0,0,396,397,5,116,0,0,397,398,5,117,0,0,398,399,5,114,
		0,0,399,400,5,110,0,0,400,104,1,0,0,0,401,402,5,118,0,0,402,403,5,97,0,
		0,403,404,5,114,0,0,404,106,1,0,0,0,405,406,5,105,0,0,406,407,5,102,0,
		0,407,108,1,0,0,0,408,409,5,102,0,0,409,410,5,111,0,0,410,411,5,114,0,
		0,411,110,1,0,0,0,412,413,5,115,0,0,413,414,5,119,0,0,414,415,5,105,0,
		0,415,416,5,116,0,0,416,417,5,99,0,0,417,418,5,104,0,0,418,112,1,0,0,0,
		419,420,5,101,0,0,420,421,5,108,0,0,421,422,5,115,0,0,422,423,5,101,0,
		0,423,114,1,0,0,0,424,425,5,114,0,0,425,426,5,97,0,0,426,427,5,110,0,0,
		427,428,5,103,0,0,428,429,5,101,0,0,429,116,1,0,0,0,430,431,5,99,0,0,431,
		432,5,97,0,0,432,433,5,115,0,0,433,434,5,101,0,0,434,118,1,0,0,0,435,436,
		5,100,0,0,436,437,5,101,0,0,437,438,5,102,0,0,438,439,5,97,0,0,439,440,
		5,117,0,0,440,441,5,108,0,0,441,442,5,116,0,0,442,120,1,0,0,0,443,444,
		5,115,0,0,444,445,5,116,0,0,445,446,5,114,0,0,446,447,5,99,0,0,447,448,
		5,111,0,0,448,449,5,110,0,0,449,450,5,118,0,0,450,451,5,46,0,0,451,452,
		5,65,0,0,452,453,5,116,0,0,453,454,5,111,0,0,454,455,5,105,0,0,455,122,
		1,0,0,0,456,457,5,115,0,0,457,458,5,116,0,0,458,459,5,114,0,0,459,460,
		5,99,0,0,460,461,5,111,0,0,461,462,5,110,0,0,462,463,5,118,0,0,463,464,
		5,46,0,0,464,465,5,80,0,0,465,466,5,97,0,0,466,467,5,114,0,0,467,468,5,
		115,0,0,468,469,5,101,0,0,469,470,5,70,0,0,470,471,5,108,0,0,471,472,5,
		111,0,0,472,473,5,97,0,0,473,474,5,116,0,0,474,124,1,0,0,0,475,476,5,114,
		0,0,476,477,5,101,0,0,477,478,5,102,0,0,478,479,5,108,0,0,479,480,5,101,
		0,0,480,481,5,99,0,0,481,482,5,116,0,0,482,483,5,46,0,0,483,484,5,84,0,
		0,484,485,5,121,0,0,485,486,5,112,0,0,486,487,5,101,0,0,487,488,5,79,0,
		0,488,489,5,102,0,0,489,126,1,0,0,0,490,491,5,115,0,0,491,492,5,108,0,
		0,492,493,5,105,0,0,493,494,5,99,0,0,494,495,5,101,0,0,495,496,5,115,0,
		0,496,497,5,46,0,0,497,498,5,73,0,0,498,499,5,110,0,0,499,500,5,100,0,
		0,500,501,5,101,0,0,501,502,5,120,0,0,502,128,1,0,0,0,503,504,5,115,0,
		0,504,505,5,116,0,0,505,506,5,114,0,0,506,507,5,105,0,0,507,508,5,110,
		0,0,508,509,5,103,0,0,509,510,5,115,0,0,510,511,5,46,0,0,511,512,5,74,
		0,0,512,513,5,111,0,0,513,514,5,105,0,0,514,515,5,110,0,0,515,130,1,0,
		0,0,516,517,5,108,0,0,517,518,5,101,0,0,518,519,5,110,0,0,519,132,1,0,
		0,0,520,521,5,97,0,0,521,522,5,112,0,0,522,523,5,112,0,0,523,524,5,101,
		0,0,524,525,5,110,0,0,525,526,5,100,0,0,526,134,1,0,0,0,527,528,3,65,32,
		0,528,136,1,0,0,0,529,530,3,67,33,0,530,138,1,0,0,0,531,532,3,69,34,0,
		532,140,1,0,0,0,533,534,3,71,35,0,534,142,1,0,0,0,535,536,3,63,31,0,536,
		144,1,0,0,0,537,538,3,59,29,0,538,539,1,0,0,0,539,540,6,72,0,0,540,146,
		1,0,0,0,541,542,5,10,0,0,542,543,1,0,0,0,543,544,6,73,0,0,544,148,1,0,
		0,0,545,548,3,73,36,0,546,548,3,75,37,0,547,545,1,0,0,0,547,546,1,0,0,
		0,548,549,1,0,0,0,549,550,6,74,0,0,550,150,1,0,0,0,16,0,223,228,233,240,
		251,259,264,270,278,286,292,298,304,308,547,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
