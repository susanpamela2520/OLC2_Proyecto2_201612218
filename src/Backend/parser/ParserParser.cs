//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Parser.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


    namespace OLC2_Proyecto2_201612218.src.Backend.parser;
     using OLC2_Proyecto2_201612218.src.Backend.Compilador.Utils;
     using OLC2_Proyecto2_201612218.src.Backend.Compilador.Abstracts;
     using OLC2_Proyecto2_201612218.src.Backend.Compilador.Expresiones;
     using OLC2_Proyecto2_201612218.src.Backend.Compilador.Instrucciones;
     using MiSwitch = OLC2_Proyecto2_201612218.src.Backend.Compilador.Instrucciones.Switch;
     

using System;
using System.IO;
using System.Text;
using System.Diagnostics;
using System.Collections.Generic;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public partial class ParserParser : Parser {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, KW_int=30, KW_float=31, 
		KW_string=32, KW_bool=33, KW_rune=34, KW_println=35, KW_main=36, KW_func=37, 
		KW_true=38, KW_false=39, KW_nil=40, KW_break=41, KW_continue=42, KW_return=43, 
		KW_var=44, KW_if=45, KW_for=46, KW_switch=47, KW_else=48, KW_range=49, 
		KW_case=50, KW_default=51, KW_atoi=52, KW_parsefloat=53, KW_typeof=54, 
		KW_index=55, KW_join=56, KW_len=57, KW_append=58, TK_rune=59, Tk_string=60, 
		Tk_int=61, Tk_float=62, Tk_id=63, IGNORE=64, SALTO=65, COMENTARIOS=66;
	public const int
		RULE_inicio = 0, RULE_instruccionglobal = 1, RULE_funcionMain = 2, RULE_funcion = 3, 
		RULE_parametros = 4, RULE_bloque = 5, RULE_instruccion = 6, RULE_declaracion = 7, 
		RULE_reasignacion = 8, RULE_estructuraIf = 9, RULE_estructuraFor = 10, 
		RULE_estructuraSwitch = 11, RULE_casos = 12, RULE_println = 13, RULE_tipoDato = 14, 
		RULE_tipo = 15, RULE_exp = 16, RULE_slice = 17, RULE_llamadafunc = 18;
	public static readonly string[] ruleNames = {
		"inicio", "instruccionglobal", "funcionMain", "funcion", "parametros", 
		"bloque", "instruccion", "declaracion", "reasignacion", "estructuraIf", 
		"estructuraFor", "estructuraSwitch", "casos", "println", "tipoDato", "tipo", 
		"exp", "slice", "llamadafunc"
	};

	private static readonly string[] _LiteralNames = {
		null, "'('", "')'", "','", "'{'", "'}'", "';'", "'='", "':='", "'+='", 
		"'-='", "'++'", "'--'", "'['", "']'", "':'", "'-'", "'*'", "'/'", "'%'", 
		"'+'", "'<='", "'>='", "'<'", "'>'", "'=='", "'!='", "'!'", "'&&'", "'||'", 
		"'int'", "'float64'", "'string'", "'bool'", "'rune'", "'fmt.Println'", 
		"'main'", "'func'", "'true'", "'false'", "'nil'", "'break'", "'continue'", 
		"'return'", "'var'", "'if'", "'for'", "'switch'", "'else'", "'range'", 
		"'case'", "'default'", "'strconv.Atoi'", "'strconv.ParseFloat'", "'reflect.TypeOf'", 
		"'slices.Index'", "'strings.Join'", "'len'", "'append'", null, null, null, 
		null, null, null, "'\\n'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, "KW_int", "KW_float", "KW_string", 
		"KW_bool", "KW_rune", "KW_println", "KW_main", "KW_func", "KW_true", "KW_false", 
		"KW_nil", "KW_break", "KW_continue", "KW_return", "KW_var", "KW_if", "KW_for", 
		"KW_switch", "KW_else", "KW_range", "KW_case", "KW_default", "KW_atoi", 
		"KW_parsefloat", "KW_typeof", "KW_index", "KW_join", "KW_len", "KW_append", 
		"TK_rune", "Tk_string", "Tk_int", "Tk_float", "Tk_id", "IGNORE", "SALTO", 
		"COMENTARIOS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Parser.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static ParserParser() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}

		public ParserParser(ITokenStream input) : this(input, Console.Out, Console.Error) { }

		public ParserParser(ITokenStream input, TextWriter output, TextWriter errorOutput)
		: base(input, output, errorOutput)
	{
		Interpreter = new ParserATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	public partial class InicioContext : ParserRuleContext {
		public List < Instruccion > resultado;
		public List < Instruccion > L = new();
		public InstruccionglobalContext ins;
		[System.Diagnostics.DebuggerNonUserCode] public InstruccionglobalContext[] instruccionglobal() {
			return GetRuleContexts<InstruccionglobalContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public InstruccionglobalContext instruccionglobal(int i) {
			return GetRuleContext<InstruccionglobalContext>(i);
		}
		public InicioContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_inicio; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.EnterInicio(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.ExitInicio(this);
		}
	}

	[RuleVersion(0)]
	public InicioContext inicio() {
		InicioContext _localctx = new InicioContext(Context, State);
		EnterRule(_localctx, 0, RULE_inicio);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 43;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			while (_la==KW_func) {
				{
				{
				State = 38;
				_localctx.ins = instruccionglobal();
				_localctx.L.Add (_localctx.ins.resultado);
				}
				}
				State = 45;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
			}
			_localctx.resultado = _localctx.L;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class InstruccionglobalContext : ParserRuleContext {
		public Instruccion resultado;
		public FuncionMainContext f1;
		public FuncionContext f2;
		[System.Diagnostics.DebuggerNonUserCode] public FuncionMainContext funcionMain() {
			return GetRuleContext<FuncionMainContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public FuncionContext funcion() {
			return GetRuleContext<FuncionContext>(0);
		}
		public InstruccionglobalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_instruccionglobal; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.EnterInstruccionglobal(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.ExitInstruccionglobal(this);
		}
	}

	[RuleVersion(0)]
	public InstruccionglobalContext instruccionglobal() {
		InstruccionglobalContext _localctx = new InstruccionglobalContext(Context, State);
		EnterRule(_localctx, 2, RULE_instruccionglobal);
		try {
			State = 54;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,1,Context) ) {
			case 1:
				EnterOuterAlt(_localctx, 1);
				{
				State = 48;
				_localctx.f1 = funcionMain();
				_localctx.resultado =  _localctx.f1.resultado;
				}
				break;
			case 2:
				EnterOuterAlt(_localctx, 2);
				{
				State = 51;
				_localctx.f2 = funcion();
				_localctx.resultado =  _localctx.f2.resultado;
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class FuncionMainContext : ParserRuleContext {
		public Instruccion resultado;
		public IToken f;
		public BloqueContext b;
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_main() { return GetToken(ParserParser.KW_main, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_func() { return GetToken(ParserParser.KW_func, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public BloqueContext bloque() {
			return GetRuleContext<BloqueContext>(0);
		}
		public FuncionMainContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_funcionMain; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.EnterFuncionMain(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.ExitFuncionMain(this);
		}
	}

	[RuleVersion(0)]
	public FuncionMainContext funcionMain() {
		FuncionMainContext _localctx = new FuncionMainContext(Context, State);
		EnterRule(_localctx, 4, RULE_funcionMain);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 56;
			_localctx.f = Match(KW_func);
			State = 57;
			Match(KW_main);
			State = 58;
			Match(T__0);
			State = 59;
			Match(T__1);
			State = 60;
			_localctx.b = bloque();

			        _localctx.resultado =  new Funcion ((_localctx.f!=null?_localctx.f.Line:0), (_localctx.f!=null?_localctx.f.Column:0), "main", new List  < Parametro >(), _localctx.b.resultado, new Tipodato (Tipo.NIL));
			    
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class FuncionContext : ParserRuleContext {
		public Instruccion resultado;
		public Tipodato t = new Tipodato(Tipo.NIL);
		public IToken f;
		public IToken id;
		public ParametrosContext p;
		public TipoDatoContext T1;
		public BloqueContext b;
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_func() { return GetToken(ParserParser.KW_func, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Tk_id() { return GetToken(ParserParser.Tk_id, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ParametrosContext parametros() {
			return GetRuleContext<ParametrosContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BloqueContext bloque() {
			return GetRuleContext<BloqueContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TipoDatoContext tipoDato() {
			return GetRuleContext<TipoDatoContext>(0);
		}
		public FuncionContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_funcion; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.EnterFuncion(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.ExitFuncion(this);
		}
	}

	[RuleVersion(0)]
	public FuncionContext funcion() {
		FuncionContext _localctx = new FuncionContext(Context, State);
		EnterRule(_localctx, 6, RULE_funcion);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 63;
			_localctx.f = Match(KW_func);
			State = 64;
			_localctx.id = Match(Tk_id);
			State = 65;
			Match(T__0);
			State = 66;
			_localctx.p = parametros();
			State = 67;
			Match(T__1);
			State = 71;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if ((((_la) & ~0x3f) == 0 && ((1L << _la) & 33286004736L) != 0)) {
				{
				State = 68;
				_localctx.T1 = tipoDato();
				_localctx.t =  _localctx.T1.resultado;
				}
			}

			State = 73;
			_localctx.b = bloque();

			        _localctx.resultado =  new Funcion ((_localctx.f!=null?_localctx.f.Line:0), (_localctx.f!=null?_localctx.f.Column:0), (_localctx.id!=null?_localctx.id.Text:null), _localctx.p.resultado, _localctx.b.resultado, _localctx.t);
			    
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ParametrosContext : ParserRuleContext {
		public List < Parametro > resultado;
		public List < Parametro > @params = new();
		public IToken id;
		public TipoDatoContext t;
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] Tk_id() { return GetTokens(ParserParser.Tk_id); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Tk_id(int i) {
			return GetToken(ParserParser.Tk_id, i);
		}
		[System.Diagnostics.DebuggerNonUserCode] public TipoDatoContext[] tipoDato() {
			return GetRuleContexts<TipoDatoContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public TipoDatoContext tipoDato(int i) {
			return GetRuleContext<TipoDatoContext>(i);
		}
		public ParametrosContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_parametros; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.EnterParametros(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.ExitParametros(this);
		}
	}

	[RuleVersion(0)]
	public ParametrosContext parametros() {
		ParametrosContext _localctx = new ParametrosContext(Context, State);
		EnterRule(_localctx, 8, RULE_parametros);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 89;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==Tk_id) {
				{
				State = 76;
				_localctx.id = Match(Tk_id);
				State = 77;
				_localctx.t = tipoDato();
				_localctx.@params.Add(new Parametro((_localctx.id!=null?_localctx.id.Line:0) , (_localctx.id!=null?_localctx.id.Column:0), (_localctx.id!=null?_localctx.id.Text:null), _localctx.t.resultado));
				State = 86;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				while (_la==T__2) {
					{
					{
					State = 79;
					Match(T__2);
					State = 80;
					_localctx.id = Match(Tk_id);
					State = 81;
					_localctx.t = tipoDato();
					_localctx.@params.Add(new Parametro((_localctx.id!=null?_localctx.id.Line:0) , (_localctx.id!=null?_localctx.id.Column:0), (_localctx.id!=null?_localctx.id.Text:null), _localctx.t.resultado));
					}
					}
					State = 88;
					ErrorHandler.Sync(this);
					_la = TokenStream.LA(1);
				}
				}
			}


			                _localctx.resultado =  _localctx.@params;
			                
			            
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class BloqueContext : ParserRuleContext {
		public Instruccion resultado;
		public List <Statement> a = new ();
		public IToken B;
		public InstruccionContext i;
		[System.Diagnostics.DebuggerNonUserCode] public InstruccionContext[] instruccion() {
			return GetRuleContexts<InstruccionContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public InstruccionContext instruccion(int i) {
			return GetRuleContext<InstruccionContext>(i);
		}
		public BloqueContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_bloque; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.EnterBloque(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.ExitBloque(this);
		}
	}

	[RuleVersion(0)]
	public BloqueContext bloque() {
		BloqueContext _localctx = new BloqueContext(Context, State);
		EnterRule(_localctx, 10, RULE_bloque);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 93;
			_localctx.B = Match(T__3);
			State = 99;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			while ((((_la) & ~0x3f) == 0 && ((1L << _la) & -9223092726541582336L) != 0)) {
				{
				{
				State = 94;
				_localctx.i = instruccion();
				_localctx.a.Add (_localctx.i.resultado);
				}
				}
				State = 101;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
			}
			State = 102;
			Match(T__4);
			_localctx.resultado =  new Bloque ((_localctx.B!=null?_localctx.B.Line:0), (_localctx.B!=null?_localctx.B.Column:0), _localctx.a);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class InstruccionContext : ParserRuleContext {
		public Statement resultado;
		public Expresion? retorno = null;
		public LlamadafuncContext l;
		public PrintlnContext p;
		public IToken r;
		public ExpContext e;
		public IToken b;
		public IToken c;
		public DeclaracionContext d;
		public EstructuraIfContext i;
		public EstructuraForContext f;
		public ReasignacionContext z;
		public EstructuraSwitchContext s;
		[System.Diagnostics.DebuggerNonUserCode] public LlamadafuncContext llamadafunc() {
			return GetRuleContext<LlamadafuncContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public PrintlnContext println() {
			return GetRuleContext<PrintlnContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_return() { return GetToken(ParserParser.KW_return, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ExpContext exp() {
			return GetRuleContext<ExpContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_break() { return GetToken(ParserParser.KW_break, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_continue() { return GetToken(ParserParser.KW_continue, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public DeclaracionContext declaracion() {
			return GetRuleContext<DeclaracionContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public EstructuraIfContext estructuraIf() {
			return GetRuleContext<EstructuraIfContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public EstructuraForContext estructuraFor() {
			return GetRuleContext<EstructuraForContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ReasignacionContext reasignacion() {
			return GetRuleContext<ReasignacionContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public EstructuraSwitchContext estructuraSwitch() {
			return GetRuleContext<EstructuraSwitchContext>(0);
		}
		public InstruccionContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_instruccion; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.EnterInstruccion(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.ExitInstruccion(this);
		}
	}

	[RuleVersion(0)]
	public InstruccionContext instruccion() {
		InstruccionContext _localctx = new InstruccionContext(Context, State);
		EnterRule(_localctx, 12, RULE_instruccion);
		int _la;
		try {
			State = 158;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,14,Context) ) {
			case 1:
				EnterOuterAlt(_localctx, 1);
				{
				State = 105;
				_localctx.l = llamadafunc();
				State = 107;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==T__5) {
					{
					State = 106;
					Match(T__5);
					}
				}

				_localctx.resultado =  _localctx.l.resultado;
				}
				break;
			case 2:
				EnterOuterAlt(_localctx, 2);
				{
				State = 111;
				_localctx.p = println();
				State = 113;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==T__5) {
					{
					State = 112;
					Match(T__5);
					}
				}

				_localctx.resultado =  _localctx.p.resultado;
				}
				break;
			case 3:
				EnterOuterAlt(_localctx, 3);
				{
				State = 117;
				_localctx.r = Match(KW_return);
				State = 121;
				ErrorHandler.Sync(this);
				switch ( Interpreter.AdaptivePredict(TokenStream,8,Context) ) {
				case 1:
					{
					State = 118;
					_localctx.e = exp(0);
					_localctx.retorno =  _localctx.e.resultado;
					}
					break;
				}
				State = 124;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==T__5) {
					{
					State = 123;
					Match(T__5);
					}
				}

				_localctx.resultado =  new Return((_localctx.r!=null?_localctx.r.Line:0), (_localctx.r!=null?_localctx.r.Column:0), _localctx.retorno);
				}
				break;
			case 4:
				EnterOuterAlt(_localctx, 4);
				{
				State = 127;
				_localctx.b = Match(KW_break);
				State = 129;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==T__5) {
					{
					State = 128;
					Match(T__5);
					}
				}

				_localctx.resultado =  new Break((_localctx.b!=null?_localctx.b.Line:0), (_localctx.b!=null?_localctx.b.Column:0));
				}
				break;
			case 5:
				EnterOuterAlt(_localctx, 5);
				{
				State = 132;
				_localctx.c = Match(KW_continue);
				State = 134;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==T__5) {
					{
					State = 133;
					Match(T__5);
					}
				}

				_localctx.resultado =  new Continue((_localctx.c!=null?_localctx.c.Line:0), (_localctx.c!=null?_localctx.c.Column:0));
				}
				break;
			case 6:
				EnterOuterAlt(_localctx, 6);
				{
				State = 137;
				_localctx.d = declaracion();
				State = 139;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==T__5) {
					{
					State = 138;
					Match(T__5);
					}
				}

				_localctx.resultado =  _localctx.d.resultado;
				}
				break;
			case 7:
				EnterOuterAlt(_localctx, 7);
				{
				State = 143;
				_localctx.i = estructuraIf();
				_localctx.resultado =  _localctx.i.resultado;
				}
				break;
			case 8:
				EnterOuterAlt(_localctx, 8);
				{
				State = 146;
				_localctx.f = estructuraFor();
				_localctx.resultado =  _localctx.f.resultado;
				}
				break;
			case 9:
				EnterOuterAlt(_localctx, 9);
				{
				State = 149;
				_localctx.z = reasignacion();
				State = 151;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==T__5) {
					{
					State = 150;
					Match(T__5);
					}
				}

				_localctx.resultado =  _localctx.z.resultado;
				}
				break;
			case 10:
				EnterOuterAlt(_localctx, 10);
				{
				State = 155;
				_localctx.s = estructuraSwitch();
				_localctx.resultado =  _localctx.s.resultado;
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DeclaracionContext : ParserRuleContext {
		public Instruccion resultado;
		public Expresion? val = null;
		public IToken v;
		public IToken id;
		public TipoDatoContext t;
		public ExpContext e;
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_var() { return GetToken(ParserParser.KW_var, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Tk_id() { return GetToken(ParserParser.Tk_id, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public TipoDatoContext tipoDato() {
			return GetRuleContext<TipoDatoContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExpContext exp() {
			return GetRuleContext<ExpContext>(0);
		}
		public DeclaracionContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_declaracion; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.EnterDeclaracion(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.ExitDeclaracion(this);
		}
	}

	[RuleVersion(0)]
	public DeclaracionContext declaracion() {
		DeclaracionContext _localctx = new DeclaracionContext(Context, State);
		EnterRule(_localctx, 14, RULE_declaracion);
		int _la;
		try {
			State = 182;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,16,Context) ) {
			case 1:
				EnterOuterAlt(_localctx, 1);
				{
				State = 160;
				_localctx.v = Match(KW_var);
				State = 161;
				_localctx.id = Match(Tk_id);
				State = 162;
				_localctx.t = tipoDato();
				State = 167;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				if (_la==T__6) {
					{
					State = 163;
					Match(T__6);
					State = 164;
					_localctx.e = exp(0);
					_localctx.val =  _localctx.e.resultado;
					}
				}

				_localctx.resultado =  new Declaracion((_localctx.v!=null?_localctx.v.Line:0), (_localctx.v!=null?_localctx.v.Column:0), (_localctx.id!=null?_localctx.id.Text:null), _localctx.t.resultado, _localctx.val);
				}
				break;
			case 2:
				EnterOuterAlt(_localctx, 2);
				{
				State = 171;
				_localctx.id = Match(Tk_id);
				State = 172;
				Match(T__7);
				State = 173;
				_localctx.e = exp(0);
				_localctx.resultado =  new Declaracion((_localctx.id!=null?_localctx.id.Line:0), (_localctx.id!=null?_localctx.id.Column:0), (_localctx.id!=null?_localctx.id.Text:null), null, _localctx.e.resultado);
				}
				break;
			case 3:
				EnterOuterAlt(_localctx, 3);
				{
				State = 176;
				_localctx.id = Match(Tk_id);
				State = 177;
				Match(T__7);
				State = 178;
				_localctx.t = tipoDato();
				State = 179;
				_localctx.e = exp(0);
				_localctx.resultado =  new Declaracion((_localctx.id!=null?_localctx.id.Line:0), (_localctx.id!=null?_localctx.id.Column:0), (_localctx.id!=null?_localctx.id.Text:null), _localctx.t.resultado, _localctx.e.resultado);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ReasignacionContext : ParserRuleContext {
		public Instruccion resultado;
		public Instruccion? val = null;
		public List <Expresion> i = new();
		public IToken id;
		public ExpContext e;
		public ExpContext e1;
		public ExpContext e2;
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Tk_id() { return GetToken(ParserParser.Tk_id, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ExpContext[] exp() {
			return GetRuleContexts<ExpContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExpContext exp(int i) {
			return GetRuleContext<ExpContext>(i);
		}
		public ReasignacionContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_reasignacion; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.EnterReasignacion(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.ExitReasignacion(this);
		}
	}

	[RuleVersion(0)]
	public ReasignacionContext reasignacion() {
		ReasignacionContext _localctx = new ReasignacionContext(Context, State);
		EnterRule(_localctx, 16, RULE_reasignacion);
		int _la;
		try {
			State = 218;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,19,Context) ) {
			case 1:
				EnterOuterAlt(_localctx, 1);
				{
				State = 184;
				_localctx.id = Match(Tk_id);
				State = 201;
				ErrorHandler.Sync(this);
				switch (TokenStream.LA(1)) {
				case T__6:
					{
					State = 185;
					Match(T__6);
					State = 186;
					_localctx.e = exp(0);
					_localctx.val =  new Asignacion((_localctx.id!=null?_localctx.id.Line:0), (_localctx.id!=null?_localctx.id.Column:0), (_localctx.id!=null?_localctx.id.Text:null), _localctx.e.resultado);
					}
					break;
				case T__8:
					{
					State = 189;
					Match(T__8);
					State = 190;
					_localctx.e = exp(0);
					_localctx.val =  new Asignacion((_localctx.id!=null?_localctx.id.Line:0), (_localctx.id!=null?_localctx.id.Column:0), (_localctx.id!=null?_localctx.id.Text:null), new Aritmetico(0,0,new Accesovariable(0,0, (_localctx.id!=null?_localctx.id.Text:null)), "+", _localctx.e.resultado));
					}
					break;
				case T__9:
					{
					State = 193;
					Match(T__9);
					State = 194;
					_localctx.e = exp(0);
					_localctx.val =  new Asignacion((_localctx.id!=null?_localctx.id.Line:0), (_localctx.id!=null?_localctx.id.Column:0), (_localctx.id!=null?_localctx.id.Text:null), new Aritmetico(0,0,new Accesovariable(0,0, (_localctx.id!=null?_localctx.id.Text:null)), "-", _localctx.e.resultado));
					}
					break;
				case T__10:
					{
					State = 197;
					Match(T__10);
					_localctx.val =  new Asignacion((_localctx.id!=null?_localctx.id.Line:0), (_localctx.id!=null?_localctx.id.Column:0), (_localctx.id!=null?_localctx.id.Text:null), new Aritmetico(0,0,new Accesovariable(0,0, (_localctx.id!=null?_localctx.id.Text:null)), "+", new Primitivo (0,0, "1", Tipo.INT)));
					}
					break;
				case T__11:
					{
					State = 199;
					Match(T__11);
					_localctx.val =  new Asignacion((_localctx.id!=null?_localctx.id.Line:0), (_localctx.id!=null?_localctx.id.Column:0), (_localctx.id!=null?_localctx.id.Text:null), new Aritmetico(0,0,new Accesovariable(0,0, (_localctx.id!=null?_localctx.id.Text:null)), "-", new Primitivo (0,0, "1", Tipo.INT)));
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				_localctx.resultado =  _localctx.val;
				}
				break;
			case 2:
				EnterOuterAlt(_localctx, 2);
				{
				State = 204;
				_localctx.id = Match(Tk_id);
				State = 210;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				do {
					{
					{
					State = 205;
					Match(T__12);
					State = 206;
					_localctx.e1 = exp(0);
					State = 207;
					Match(T__13);
					_localctx.i.Add (_localctx.e1.resultado);
					}
					}
					State = 212;
					ErrorHandler.Sync(this);
					_la = TokenStream.LA(1);
				} while ( _la==T__12 );
				State = 214;
				Match(T__6);
				State = 215;
				_localctx.e2 = exp(0);
				_localctx.resultado =  new Asignacion ((_localctx.id!=null?_localctx.id.Line:0), (_localctx.id!=null?_localctx.id.Column:0), (_localctx.id!=null?_localctx.id.Text:null), _localctx.e2.resultado, _localctx.i);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class EstructuraIfContext : ParserRuleContext {
		public Instruccion resultado;
		public Instruccion? b = null;
		public IToken i;
		public ExpContext e;
		public BloqueContext b1;
		public BloqueContext b2;
		public EstructuraIfContext b3;
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_if() { return GetToken(ParserParser.KW_if, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ExpContext exp() {
			return GetRuleContext<ExpContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public BloqueContext[] bloque() {
			return GetRuleContexts<BloqueContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public BloqueContext bloque(int i) {
			return GetRuleContext<BloqueContext>(i);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_else() { return GetToken(ParserParser.KW_else, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public EstructuraIfContext estructuraIf() {
			return GetRuleContext<EstructuraIfContext>(0);
		}
		public EstructuraIfContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_estructuraIf; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.EnterEstructuraIf(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.ExitEstructuraIf(this);
		}
	}

	[RuleVersion(0)]
	public EstructuraIfContext estructuraIf() {
		EstructuraIfContext _localctx = new EstructuraIfContext(Context, State);
		EnterRule(_localctx, 18, RULE_estructuraIf);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 220;
			_localctx.i = Match(KW_if);
			State = 221;
			_localctx.e = exp(0);
			State = 222;
			_localctx.b1 = bloque();
			State = 232;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==KW_else) {
				{
				State = 223;
				Match(KW_else);
				State = 230;
				ErrorHandler.Sync(this);
				switch (TokenStream.LA(1)) {
				case T__3:
					{
					State = 224;
					_localctx.b2 = bloque();
					_localctx.b =  _localctx.b2.resultado;
					}
					break;
				case KW_if:
					{
					State = 227;
					_localctx.b3 = estructuraIf();
					_localctx.b =  _localctx.b3.resultado;
					}
					break;
				default:
					throw new NoViableAltException(this);
				}
				}
			}

			_localctx.resultado =  new If ((_localctx.i!=null?_localctx.i.Line:0), (_localctx.i!=null?_localctx.i.Column:0), _localctx.e.resultado, _localctx.b1.resultado, _localctx.b);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class EstructuraForContext : ParserRuleContext {
		public Instruccion resultado;
		public Expresion condicion = new Primitivo (0,0, "true", Tipo.BOOL);
		public IToken f1;
		public ExpContext e1;
		public BloqueContext b1;
		public IToken f2;
		public IToken id1;
		public ExpContext e2;
		public ExpContext e3;
		public ReasignacionContext r;
		public BloqueContext b2;
		public IToken f3;
		public IToken id3;
		public IToken id4;
		public ExpContext e4;
		public BloqueContext b3;
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_for() { return GetToken(ParserParser.KW_for, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public BloqueContext bloque() {
			return GetRuleContext<BloqueContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExpContext[] exp() {
			return GetRuleContexts<ExpContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExpContext exp(int i) {
			return GetRuleContext<ExpContext>(i);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] Tk_id() { return GetTokens(ParserParser.Tk_id); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Tk_id(int i) {
			return GetToken(ParserParser.Tk_id, i);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ReasignacionContext reasignacion() {
			return GetRuleContext<ReasignacionContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_range() { return GetToken(ParserParser.KW_range, 0); }
		public EstructuraForContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_estructuraFor; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.EnterEstructuraFor(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.ExitEstructuraFor(this);
		}
	}

	[RuleVersion(0)]
	public EstructuraForContext estructuraFor() {
		EstructuraForContext _localctx = new EstructuraForContext(Context, State);
		EnterRule(_localctx, 20, RULE_estructuraFor);
		try {
			State = 266;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,23,Context) ) {
			case 1:
				EnterOuterAlt(_localctx, 1);
				{
				State = 236;
				_localctx.f1 = Match(KW_for);
				State = 240;
				ErrorHandler.Sync(this);
				switch ( Interpreter.AdaptivePredict(TokenStream,22,Context) ) {
				case 1:
					{
					State = 237;
					_localctx.e1 = exp(0);
					_localctx.condicion =  _localctx.e1.resultado;
					}
					break;
				}
				State = 242;
				_localctx.b1 = bloque();
				_localctx.resultado =  new While((_localctx.f1!=null?_localctx.f1.Line:0), (_localctx.f1!=null?_localctx.f1.Column:0), _localctx.condicion, _localctx.b1.resultado);
				}
				break;
			case 2:
				EnterOuterAlt(_localctx, 2);
				{
				State = 245;
				_localctx.f2 = Match(KW_for);
				State = 246;
				_localctx.id1 = Match(Tk_id);
				State = 247;
				Match(T__7);
				State = 248;
				_localctx.e2 = exp(0);
				State = 249;
				Match(T__5);
				State = 250;
				_localctx.e3 = exp(0);
				State = 251;
				Match(T__5);
				State = 252;
				_localctx.r = reasignacion();
				State = 253;
				_localctx.b2 = bloque();
				_localctx.resultado =  new For((_localctx.f2!=null?_localctx.f2.Line:0), (_localctx.f2!=null?_localctx.f2.Column:0), 
				    new Declaracion((_localctx.id1!=null?_localctx.id1.Line:0), (_localctx.id1!=null?_localctx.id1.Column:0), (_localctx.id1!=null?_localctx.id1.Text:null), null, _localctx.e2.resultado),_localctx.e3.resultado, 
				    _localctx.r.resultado, _localctx.b2.resultado) ;
				}
				break;
			case 3:
				EnterOuterAlt(_localctx, 3);
				{
				State = 256;
				_localctx.f3 = Match(KW_for);
				State = 257;
				_localctx.id3 = Match(Tk_id);
				State = 258;
				Match(T__2);
				State = 259;
				_localctx.id4 = Match(Tk_id);
				State = 260;
				Match(T__7);
				State = 261;
				Match(KW_range);
				State = 262;
				_localctx.e4 = exp(0);
				State = 263;
				_localctx.b3 = bloque();
				_localctx.resultado =  new ForEach((_localctx.f3!=null?_localctx.f3.Line:0), (_localctx.f3!=null?_localctx.f3.Column:0), (_localctx.id3!=null?_localctx.id3.Text:null), (_localctx.id4!=null?_localctx.id4.Text:null), _localctx.e4.resultado, _localctx.b3.resultado);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class EstructuraSwitchContext : ParserRuleContext {
		public Instruccion resultado;
		public IToken sw;
		public ExpContext e;
		public CasosContext c;
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_switch() { return GetToken(ParserParser.KW_switch, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ExpContext exp() {
			return GetRuleContext<ExpContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public CasosContext casos() {
			return GetRuleContext<CasosContext>(0);
		}
		public EstructuraSwitchContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_estructuraSwitch; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.EnterEstructuraSwitch(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.ExitEstructuraSwitch(this);
		}
	}

	[RuleVersion(0)]
	public EstructuraSwitchContext estructuraSwitch() {
		EstructuraSwitchContext _localctx = new EstructuraSwitchContext(Context, State);
		EnterRule(_localctx, 22, RULE_estructuraSwitch);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 268;
			_localctx.sw = Match(KW_switch);
			State = 269;
			_localctx.e = exp(0);
			State = 270;
			Match(T__3);
			State = 271;
			_localctx.c = casos();
			State = 272;
			Match(T__4);
			_localctx.resultado =  new MiSwitch((_localctx.sw!=null?_localctx.sw.Line:0), (_localctx.sw!=null?_localctx.sw.Column:0), _localctx.e.resultado, _localctx.c.resultado);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class CasosContext : ParserRuleContext {
		public List <Case> resultado = new ();
		public List <Statement> a = new ();
		public IToken c;
		public ExpContext e;
		public InstruccionContext i1;
		public IToken d;
		public InstruccionContext i2;
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] KW_case() { return GetTokens(ParserParser.KW_case); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_case(int i) {
			return GetToken(ParserParser.KW_case, i);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExpContext[] exp() {
			return GetRuleContexts<ExpContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExpContext exp(int i) {
			return GetRuleContext<ExpContext>(i);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_default() { return GetToken(ParserParser.KW_default, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public InstruccionContext[] instruccion() {
			return GetRuleContexts<InstruccionContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public InstruccionContext instruccion(int i) {
			return GetRuleContext<InstruccionContext>(i);
		}
		public CasosContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_casos; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.EnterCasos(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.ExitCasos(this);
		}
	}

	[RuleVersion(0)]
	public CasosContext casos() {
		CasosContext _localctx = new CasosContext(Context, State);
		EnterRule(_localctx, 24, RULE_casos);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 291;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			while (_la==KW_case) {
				{
				{
				_localctx.a = new();
				State = 276;
				_localctx.c = Match(KW_case);
				State = 277;
				_localctx.e = exp(0);
				State = 278;
				Match(T__14);
				State = 284;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				while ((((_la) & ~0x3f) == 0 && ((1L << _la) & -9223092726541582336L) != 0)) {
					{
					{
					State = 279;
					_localctx.i1 = instruccion();
					_localctx.a.Add(_localctx.i1.resultado);
					}
					}
					State = 286;
					ErrorHandler.Sync(this);
					_la = TokenStream.LA(1);
				}
				_localctx.resultado.Add(new Case((_localctx.c!=null?_localctx.c.Line:0), (_localctx.c!=null?_localctx.c.Column:0), _localctx.e.resultado, new Bloque(0,0,_localctx.a)));
				}
				}
				State = 293;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
			}
			State = 306;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if (_la==KW_default) {
				{
				_localctx.a = new();
				State = 295;
				_localctx.d = Match(KW_default);
				State = 296;
				Match(T__14);
				State = 302;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				while ((((_la) & ~0x3f) == 0 && ((1L << _la) & -9223092726541582336L) != 0)) {
					{
					{
					State = 297;
					_localctx.i2 = instruccion();
					_localctx.a.Add(_localctx.i2.resultado);
					}
					}
					State = 304;
					ErrorHandler.Sync(this);
					_la = TokenStream.LA(1);
				}
				_localctx.resultado.Add(new Case((_localctx.d!=null?_localctx.d.Line:0), (_localctx.d!=null?_localctx.d.Column:0), null , new Bloque(0,0,_localctx.a)));
				}
			}

			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class PrintlnContext : ParserRuleContext {
		public Instruccion resultado;
		public List <Expresion> a = new ();
		public IToken p;
		public ExpContext e;
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_println() { return GetToken(ParserParser.KW_println, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ExpContext[] exp() {
			return GetRuleContexts<ExpContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExpContext exp(int i) {
			return GetRuleContext<ExpContext>(i);
		}
		public PrintlnContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_println; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.EnterPrintln(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.ExitPrintln(this);
		}
	}

	[RuleVersion(0)]
	public PrintlnContext println() {
		PrintlnContext _localctx = new PrintlnContext(Context, State);
		EnterRule(_localctx, 26, RULE_println);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 308;
			_localctx.p = Match(KW_println);
			State = 309;
			Match(T__0);
			State = 321;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if ((((_la) & ~0x3f) == 0 && ((1L << _la) & -4501675347738606L) != 0)) {
				{
				State = 310;
				_localctx.e = exp(0);
				_localctx.a.Add (_localctx.e.resultado);
				State = 318;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				while (_la==T__2) {
					{
					{
					State = 312;
					Match(T__2);
					State = 313;
					_localctx.e = exp(0);
					_localctx.a.Add (_localctx.e.resultado);
					}
					}
					State = 320;
					ErrorHandler.Sync(this);
					_la = TokenStream.LA(1);
				}
				}
			}

			State = 323;
			Match(T__1);
			_localctx.resultado =  new Print((_localctx.p!=null?_localctx.p.Line:0), (_localctx.p!=null?_localctx.p.Column:0), _localctx.a);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TipoDatoContext : ParserRuleContext {
		public Tipodato resultado;
		public int dimensiones = 0;
		public TipoContext t;
		[System.Diagnostics.DebuggerNonUserCode] public TipoContext tipo() {
			return GetRuleContext<TipoContext>(0);
		}
		public TipoDatoContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_tipoDato; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.EnterTipoDato(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.ExitTipoDato(this);
		}
	}

	[RuleVersion(0)]
	public TipoDatoContext tipoDato() {
		TipoDatoContext _localctx = new TipoDatoContext(Context, State);
		EnterRule(_localctx, 28, RULE_tipoDato);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 331;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			while (_la==T__12) {
				{
				{
				State = 326;
				Match(T__12);
				State = 327;
				Match(T__13);
				_localctx.dimensiones ++;
				}
				}
				State = 333;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
			}
			State = 334;
			_localctx.t = tipo();

			        if(_localctx.dimensiones == 0){
			            _localctx.resultado =  new Tipodato(_localctx.t.resultado);
			            }else { 
			                _localctx.resultado =  new Tipodato(Tipo.SLICE, _localctx.t.resultado, _localctx.dimensiones);
			            }
			    
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TipoContext : ParserRuleContext {
		public Tipo resultado;
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_int() { return GetToken(ParserParser.KW_int, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_float() { return GetToken(ParserParser.KW_float, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_string() { return GetToken(ParserParser.KW_string, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_rune() { return GetToken(ParserParser.KW_rune, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_bool() { return GetToken(ParserParser.KW_bool, 0); }
		public TipoContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_tipo; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.EnterTipo(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.ExitTipo(this);
		}
	}

	[RuleVersion(0)]
	public TipoContext tipo() {
		TipoContext _localctx = new TipoContext(Context, State);
		EnterRule(_localctx, 30, RULE_tipo);
		try {
			State = 347;
			ErrorHandler.Sync(this);
			switch (TokenStream.LA(1)) {
			case KW_int:
				EnterOuterAlt(_localctx, 1);
				{
				State = 337;
				Match(KW_int);
				_localctx.resultado =  Tipo.INT;
				}
				break;
			case KW_float:
				EnterOuterAlt(_localctx, 2);
				{
				State = 339;
				Match(KW_float);
				_localctx.resultado =  Tipo.FLOAT;
				}
				break;
			case KW_string:
				EnterOuterAlt(_localctx, 3);
				{
				State = 341;
				Match(KW_string);
				_localctx.resultado =  Tipo.STRING;
				}
				break;
			case KW_rune:
				EnterOuterAlt(_localctx, 4);
				{
				State = 343;
				Match(KW_rune);
				_localctx.resultado =  Tipo.RUNE;
				}
				break;
			case KW_bool:
				EnterOuterAlt(_localctx, 5);
				{
				State = 345;
				Match(KW_bool);
				_localctx.resultado =  Tipo.BOOL;
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ExpContext : ParserRuleContext {
		public Expresion resultado;
		public List < Expresion > i = new();
		public ExpContext e1;
		public IToken s;
		public IToken f1;
		public ExpContext e;
		public ExpContext e2;
		public LlamadafuncContext f;
		public IToken id;
		public IToken p;
		public SliceContext v;
		[System.Diagnostics.DebuggerNonUserCode] public ExpContext[] exp() {
			return GetRuleContexts<ExpContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExpContext exp(int i) {
			return GetRuleContext<ExpContext>(i);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_atoi() { return GetToken(ParserParser.KW_atoi, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_parsefloat() { return GetToken(ParserParser.KW_parsefloat, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_typeof() { return GetToken(ParserParser.KW_typeof, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_len() { return GetToken(ParserParser.KW_len, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_index() { return GetToken(ParserParser.KW_index, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_append() { return GetToken(ParserParser.KW_append, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_join() { return GetToken(ParserParser.KW_join, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public LlamadafuncContext llamadafunc() {
			return GetRuleContext<LlamadafuncContext>(0);
		}
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Tk_id() { return GetToken(ParserParser.Tk_id, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Tk_int() { return GetToken(ParserParser.Tk_int, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Tk_float() { return GetToken(ParserParser.Tk_float, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Tk_string() { return GetToken(ParserParser.Tk_string, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode TK_rune() { return GetToken(ParserParser.TK_rune, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_true() { return GetToken(ParserParser.KW_true, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_false() { return GetToken(ParserParser.KW_false, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode KW_nil() { return GetToken(ParserParser.KW_nil, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public SliceContext slice() {
			return GetRuleContext<SliceContext>(0);
		}
		public ExpContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_exp; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.EnterExp(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.ExitExp(this);
		}
	}

	[RuleVersion(0)]
	public ExpContext exp() {
		return exp(0);
	}

	private ExpContext exp(int _p) {
		ParserRuleContext _parentctx = Context;
		int _parentState = State;
		ExpContext _localctx = new ExpContext(Context, _parentState);
		ExpContext _prevctx = _localctx;
		int _startState = 32;
		EnterRecursionRule(_localctx, 32, RULE_exp, _p);
		int _la;
		try {
			int _alt;
			EnterOuterAlt(_localctx, 1);
			{
			State = 445;
			ErrorHandler.Sync(this);
			switch ( Interpreter.AdaptivePredict(TokenStream,33,Context) ) {
			case 1:
				{
				State = 350;
				_localctx.s = Match(T__15);
				State = 351;
				_localctx.e1 = exp(28);
				_localctx.resultado =  new Aritmetico ((_localctx.s!=null?_localctx.s.Line:0), (_localctx.s!=null?_localctx.s.Column:0), new Primitivo (0,0,0,Tipo.INT), (_localctx.s!=null?_localctx.s.Text:null), _localctx.e1.resultado);
				}
				break;
			case 2:
				{
				State = 354;
				_localctx.s = Match(T__26);
				State = 355;
				_localctx.e1 = exp(22);
				_localctx.resultado =  new Logico((_localctx.s!=null?_localctx.s.Line:0), (_localctx.s!=null?_localctx.s.Column:0), (_localctx.s!=null?_localctx.s.Text:null), _localctx.e1.resultado);
				}
				break;
			case 3:
				{
				State = 358;
				_localctx.f1 = Match(KW_atoi);
				State = 359;
				Match(T__0);
				State = 360;
				_localctx.e = exp(0);
				State = 361;
				Match(T__1);
				_localctx.resultado =  new Embebidas((_localctx.f1!=null?_localctx.f1.Line:0), (_localctx.f1!=null?_localctx.f1.Column:0), (_localctx.f1!=null?_localctx.f1.Text:null),_localctx.e.resultado);
				}
				break;
			case 4:
				{
				State = 364;
				_localctx.f1 = Match(KW_parsefloat);
				State = 365;
				Match(T__0);
				State = 366;
				_localctx.e = exp(0);
				State = 367;
				Match(T__1);
				_localctx.resultado =  new Embebidas((_localctx.f1!=null?_localctx.f1.Line:0), (_localctx.f1!=null?_localctx.f1.Column:0), (_localctx.f1!=null?_localctx.f1.Text:null),_localctx.e.resultado);
				}
				break;
			case 5:
				{
				State = 370;
				_localctx.f1 = Match(KW_typeof);
				State = 371;
				Match(T__0);
				State = 372;
				_localctx.e = exp(0);
				State = 373;
				Match(T__1);
				_localctx.resultado =  new Embebidas((_localctx.f1!=null?_localctx.f1.Line:0), (_localctx.f1!=null?_localctx.f1.Column:0), (_localctx.f1!=null?_localctx.f1.Text:null),_localctx.e.resultado);
				}
				break;
			case 6:
				{
				State = 376;
				_localctx.f1 = Match(KW_len);
				State = 377;
				Match(T__0);
				State = 378;
				_localctx.e = exp(0);
				State = 379;
				Match(T__1);
				_localctx.resultado =  new Embebidas((_localctx.f1!=null?_localctx.f1.Line:0), (_localctx.f1!=null?_localctx.f1.Column:0), (_localctx.f1!=null?_localctx.f1.Text:null),_localctx.e.resultado);
				}
				break;
			case 7:
				{
				State = 382;
				_localctx.f1 = Match(KW_index);
				State = 383;
				Match(T__0);
				State = 384;
				_localctx.e1 = exp(0);
				State = 385;
				Match(T__2);
				State = 386;
				_localctx.e2 = exp(0);
				State = 387;
				Match(T__1);
				_localctx.resultado =  new Embebidas((_localctx.f1!=null?_localctx.f1.Line:0), (_localctx.f1!=null?_localctx.f1.Column:0), (_localctx.f1!=null?_localctx.f1.Text:null),_localctx.e1.resultado, _localctx.e2.resultado);
				}
				break;
			case 8:
				{
				State = 390;
				_localctx.f1 = Match(KW_append);
				State = 391;
				Match(T__0);
				State = 392;
				_localctx.e1 = exp(0);
				State = 393;
				Match(T__2);
				State = 394;
				_localctx.e2 = exp(0);
				State = 395;
				Match(T__1);
				_localctx.resultado =  new Embebidas((_localctx.f1!=null?_localctx.f1.Line:0), (_localctx.f1!=null?_localctx.f1.Column:0), (_localctx.f1!=null?_localctx.f1.Text:null),_localctx.e1.resultado, _localctx.e2.resultado);
				}
				break;
			case 9:
				{
				State = 398;
				_localctx.f1 = Match(KW_join);
				State = 399;
				Match(T__0);
				State = 400;
				_localctx.e1 = exp(0);
				State = 401;
				Match(T__2);
				State = 402;
				_localctx.e2 = exp(0);
				State = 403;
				Match(T__1);
				_localctx.resultado =  new Embebidas((_localctx.f1!=null?_localctx.f1.Line:0), (_localctx.f1!=null?_localctx.f1.Column:0), (_localctx.f1!=null?_localctx.f1.Text:null),_localctx.e1.resultado, _localctx.e2.resultado);
				}
				break;
			case 10:
				{
				State = 406;
				_localctx.f = llamadafunc();
				_localctx.resultado =  _localctx.f.resultado;
				}
				break;
			case 11:
				{
				State = 409;
				_localctx.id = Match(Tk_id);
				State = 415;
				ErrorHandler.Sync(this);
				_alt = 1;
				do {
					switch (_alt) {
					case 1:
						{
						{
						State = 410;
						Match(T__12);
						State = 411;
						_localctx.e = exp(0);
						State = 412;
						Match(T__13);
						_localctx.i.Add(_localctx.e.resultado);
						}
						}
						break;
					default:
						throw new NoViableAltException(this);
					}
					State = 417;
					ErrorHandler.Sync(this);
					_alt = Interpreter.AdaptivePredict(TokenStream,32,Context);
				} while ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER );
				_localctx.resultado =  new Accesovariable((_localctx.id!=null?_localctx.id.Line:0), (_localctx.id!=null?_localctx.id.Column:0), (_localctx.id!=null?_localctx.id.Text:null), _localctx.i);
				}
				break;
			case 12:
				{
				State = 421;
				_localctx.id = Match(Tk_id);
				_localctx.resultado =  new Accesovariable((_localctx.id!=null?_localctx.id.Line:0), (_localctx.id!=null?_localctx.id.Column:0), (_localctx.id!=null?_localctx.id.Text:null));
				}
				break;
			case 13:
				{
				State = 423;
				_localctx.p = Match(Tk_int);
				_localctx.resultado =  new Primitivo((_localctx.p!=null?_localctx.p.Line:0), (_localctx.p!=null?_localctx.p.Column:0), (_localctx.p!=null?_localctx.p.Text:null), Tipo.INT);
				}
				break;
			case 14:
				{
				State = 425;
				_localctx.p = Match(Tk_float);
				_localctx.resultado =  new Primitivo((_localctx.p!=null?_localctx.p.Line:0), (_localctx.p!=null?_localctx.p.Column:0), (_localctx.p!=null?_localctx.p.Text:null), Tipo.FLOAT);
				}
				break;
			case 15:
				{
				State = 427;
				_localctx.p = Match(Tk_string);
				_localctx.resultado =  new Primitivo((_localctx.p!=null?_localctx.p.Line:0), (_localctx.p!=null?_localctx.p.Column:0), (_localctx.p!=null?_localctx.p.Text:null).Substring(1,(_localctx.p!=null?_localctx.p.Text:null).Length-2), Tipo.STRING);
				}
				break;
			case 16:
				{
				State = 429;
				_localctx.p = Match(TK_rune);
				_localctx.resultado =  new Primitivo((_localctx.p!=null?_localctx.p.Line:0), (_localctx.p!=null?_localctx.p.Column:0), (_localctx.p!=null?_localctx.p.Text:null).Substring(1,(_localctx.p!=null?_localctx.p.Text:null).Length-2), Tipo.RUNE);
				}
				break;
			case 17:
				{
				State = 431;
				_localctx.p = Match(KW_true);
				_localctx.resultado =  new Primitivo((_localctx.p!=null?_localctx.p.Line:0), (_localctx.p!=null?_localctx.p.Column:0), (_localctx.p!=null?_localctx.p.Text:null), Tipo.BOOL);
				}
				break;
			case 18:
				{
				State = 433;
				_localctx.p = Match(KW_false);
				_localctx.resultado =  new Primitivo((_localctx.p!=null?_localctx.p.Line:0), (_localctx.p!=null?_localctx.p.Column:0), (_localctx.p!=null?_localctx.p.Text:null), Tipo.BOOL);
				}
				break;
			case 19:
				{
				State = 435;
				_localctx.p = Match(KW_nil);
				_localctx.resultado =  new Primitivo((_localctx.p!=null?_localctx.p.Line:0), (_localctx.p!=null?_localctx.p.Column:0), (_localctx.p!=null?_localctx.p.Text:null), Tipo.NIL);
				}
				break;
			case 20:
				{
				State = 437;
				_localctx.v = slice();
				_localctx.resultado =  _localctx.v.resultado;
				}
				break;
			case 21:
				{
				State = 440;
				Match(T__0);
				State = 441;
				_localctx.e = exp(0);
				State = 442;
				Match(T__1);
				_localctx.resultado =  _localctx.e.resultado;
				}
				break;
			}
			Context.Stop = TokenStream.LT(-1);
			State = 484;
			ErrorHandler.Sync(this);
			_alt = Interpreter.AdaptivePredict(TokenStream,35,Context);
			while ( _alt!=2 && _alt!=global::Antlr4.Runtime.Atn.ATN.INVALID_ALT_NUMBER ) {
				if ( _alt==1 ) {
					if ( ParseListeners!=null )
						TriggerExitRuleEvent();
					_prevctx = _localctx;
					{
					State = 482;
					ErrorHandler.Sync(this);
					switch ( Interpreter.AdaptivePredict(TokenStream,34,Context) ) {
					case 1:
						{
						_localctx = new ExpContext(_parentctx, _parentState);
						_localctx.e1 = _prevctx;
						PushNewRecursionContext(_localctx, _startState, RULE_exp);
						State = 447;
						if (!(Precpred(Context, 27))) throw new FailedPredicateException(this, "Precpred(Context, 27)");
						State = 448;
						_localctx.s = TokenStream.LT(1);
						_la = TokenStream.LA(1);
						if ( !((((_la) & ~0x3f) == 0 && ((1L << _la) & 917504L) != 0)) ) {
							_localctx.s = ErrorHandler.RecoverInline(this);
						}
						else {
							ErrorHandler.ReportMatch(this);
						    Consume();
						}
						State = 449;
						_localctx.e2 = exp(28);
						_localctx.resultado =  new Aritmetico (_localctx.e1.resultado.Linea, _localctx.e1.resultado.Columna, _localctx.e1.resultado, (_localctx.s!=null?_localctx.s.Text:null), _localctx.e2.resultado);
						}
						break;
					case 2:
						{
						_localctx = new ExpContext(_parentctx, _parentState);
						_localctx.e1 = _prevctx;
						PushNewRecursionContext(_localctx, _startState, RULE_exp);
						State = 452;
						if (!(Precpred(Context, 26))) throw new FailedPredicateException(this, "Precpred(Context, 26)");
						State = 453;
						_localctx.s = TokenStream.LT(1);
						_la = TokenStream.LA(1);
						if ( !(_la==T__15 || _la==T__19) ) {
							_localctx.s = ErrorHandler.RecoverInline(this);
						}
						else {
							ErrorHandler.ReportMatch(this);
						    Consume();
						}
						State = 454;
						_localctx.e2 = exp(27);
						_localctx.resultado =  new Aritmetico (_localctx.e1.resultado.Linea, _localctx.e1.resultado.Columna, _localctx.e1.resultado, (_localctx.s!=null?_localctx.s.Text:null), _localctx.e2.resultado);
						}
						break;
					case 3:
						{
						_localctx = new ExpContext(_parentctx, _parentState);
						_localctx.e1 = _prevctx;
						PushNewRecursionContext(_localctx, _startState, RULE_exp);
						State = 457;
						if (!(Precpred(Context, 25))) throw new FailedPredicateException(this, "Precpred(Context, 25)");
						State = 458;
						_localctx.s = TokenStream.LT(1);
						_la = TokenStream.LA(1);
						if ( !(_la==T__20 || _la==T__21) ) {
							_localctx.s = ErrorHandler.RecoverInline(this);
						}
						else {
							ErrorHandler.ReportMatch(this);
						    Consume();
						}
						State = 459;
						_localctx.e2 = exp(26);
						_localctx.resultado =  new Relacional(_localctx.e1.resultado.Linea, _localctx.e1.resultado.Columna, _localctx.e1.resultado, (_localctx.s!=null?_localctx.s.Text:null), _localctx.e2.resultado);
						}
						break;
					case 4:
						{
						_localctx = new ExpContext(_parentctx, _parentState);
						_localctx.e1 = _prevctx;
						PushNewRecursionContext(_localctx, _startState, RULE_exp);
						State = 462;
						if (!(Precpred(Context, 24))) throw new FailedPredicateException(this, "Precpred(Context, 24)");
						State = 463;
						_localctx.s = TokenStream.LT(1);
						_la = TokenStream.LA(1);
						if ( !(_la==T__22 || _la==T__23) ) {
							_localctx.s = ErrorHandler.RecoverInline(this);
						}
						else {
							ErrorHandler.ReportMatch(this);
						    Consume();
						}
						State = 464;
						_localctx.e2 = exp(25);
						_localctx.resultado =  new Relacional(_localctx.e1.resultado.Linea, _localctx.e1.resultado.Columna, _localctx.e1.resultado, (_localctx.s!=null?_localctx.s.Text:null), _localctx.e2.resultado);
						}
						break;
					case 5:
						{
						_localctx = new ExpContext(_parentctx, _parentState);
						_localctx.e1 = _prevctx;
						PushNewRecursionContext(_localctx, _startState, RULE_exp);
						State = 467;
						if (!(Precpred(Context, 23))) throw new FailedPredicateException(this, "Precpred(Context, 23)");
						State = 468;
						_localctx.s = TokenStream.LT(1);
						_la = TokenStream.LA(1);
						if ( !(_la==T__24 || _la==T__25) ) {
							_localctx.s = ErrorHandler.RecoverInline(this);
						}
						else {
							ErrorHandler.ReportMatch(this);
						    Consume();
						}
						State = 469;
						_localctx.e2 = exp(24);
						_localctx.resultado =  new Relacional(_localctx.e1.resultado.Linea, _localctx.e1.resultado.Columna, _localctx.e1.resultado, (_localctx.s!=null?_localctx.s.Text:null), _localctx.e2.resultado);
						}
						break;
					case 6:
						{
						_localctx = new ExpContext(_parentctx, _parentState);
						_localctx.e1 = _prevctx;
						PushNewRecursionContext(_localctx, _startState, RULE_exp);
						State = 472;
						if (!(Precpred(Context, 21))) throw new FailedPredicateException(this, "Precpred(Context, 21)");
						State = 473;
						_localctx.s = Match(T__27);
						State = 474;
						_localctx.e2 = exp(22);
						_localctx.resultado =  new Logico(_localctx.e1.resultado.Linea, _localctx.e1.resultado.Columna, _localctx.e1.resultado, (_localctx.s!=null?_localctx.s.Text:null), _localctx.e2.resultado);
						}
						break;
					case 7:
						{
						_localctx = new ExpContext(_parentctx, _parentState);
						_localctx.e1 = _prevctx;
						PushNewRecursionContext(_localctx, _startState, RULE_exp);
						State = 477;
						if (!(Precpred(Context, 20))) throw new FailedPredicateException(this, "Precpred(Context, 20)");
						State = 478;
						_localctx.s = Match(T__28);
						State = 479;
						_localctx.e2 = exp(21);
						_localctx.resultado =  new Logico(_localctx.e1.resultado.Linea, _localctx.e1.resultado.Columna, _localctx.e1.resultado, (_localctx.s!=null?_localctx.s.Text:null), _localctx.e2.resultado);
						}
						break;
					}
					} 
				}
				State = 486;
				ErrorHandler.Sync(this);
				_alt = Interpreter.AdaptivePredict(TokenStream,35,Context);
			}
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			UnrollRecursionContexts(_parentctx);
		}
		return _localctx;
	}

	public partial class SliceContext : ParserRuleContext {
		public Expresion resultado;
		public List <Expresion> a = new ();
		public IToken l;
		public ExpContext e;
		[System.Diagnostics.DebuggerNonUserCode] public ExpContext[] exp() {
			return GetRuleContexts<ExpContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExpContext exp(int i) {
			return GetRuleContext<ExpContext>(i);
		}
		public SliceContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_slice; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.EnterSlice(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.ExitSlice(this);
		}
	}

	[RuleVersion(0)]
	public SliceContext slice() {
		SliceContext _localctx = new SliceContext(Context, State);
		EnterRule(_localctx, 34, RULE_slice);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 487;
			_localctx.l = Match(T__3);
			State = 499;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if ((((_la) & ~0x3f) == 0 && ((1L << _la) & -4501675347738606L) != 0)) {
				{
				State = 488;
				_localctx.e = exp(0);
				_localctx.a.Add (_localctx.e.resultado);
				State = 496;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				while (_la==T__2) {
					{
					{
					State = 490;
					Match(T__2);
					State = 491;
					_localctx.e = exp(0);
					_localctx.a.Add (_localctx.e.resultado);
					}
					}
					State = 498;
					ErrorHandler.Sync(this);
					_la = TokenStream.LA(1);
				}
				}
			}

			State = 501;
			Match(T__4);
			_localctx.resultado =  new Slice((_localctx.l!=null?_localctx.l.Line:0), (_localctx.l!=null?_localctx.l.Column:0), _localctx.a);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class LlamadafuncContext : ParserRuleContext {
		public Expresion resultado;
		public List <Expresion> a = new ();
		public IToken id;
		public ExpContext e;
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Tk_id() { return GetToken(ParserParser.Tk_id, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ExpContext[] exp() {
			return GetRuleContexts<ExpContext>();
		}
		[System.Diagnostics.DebuggerNonUserCode] public ExpContext exp(int i) {
			return GetRuleContext<ExpContext>(i);
		}
		public LlamadafuncContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_llamadafunc; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override void EnterRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.EnterLlamadafunc(this);
		}
		[System.Diagnostics.DebuggerNonUserCode]
		public override void ExitRule(IParseTreeListener listener) {
			IParserListener typedListener = listener as IParserListener;
			if (typedListener != null) typedListener.ExitLlamadafunc(this);
		}
	}

	[RuleVersion(0)]
	public LlamadafuncContext llamadafunc() {
		LlamadafuncContext _localctx = new LlamadafuncContext(Context, State);
		EnterRule(_localctx, 36, RULE_llamadafunc);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 504;
			_localctx.id = Match(Tk_id);
			State = 505;
			Match(T__0);
			State = 517;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			if ((((_la) & ~0x3f) == 0 && ((1L << _la) & -4501675347738606L) != 0)) {
				{
				State = 506;
				_localctx.e = exp(0);
				_localctx.a.Add (_localctx.e.resultado);
				State = 514;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
				while (_la==T__2) {
					{
					{
					State = 508;
					Match(T__2);
					State = 509;
					_localctx.e = exp(0);
					_localctx.a.Add (_localctx.e.resultado);
					}
					}
					State = 516;
					ErrorHandler.Sync(this);
					_la = TokenStream.LA(1);
				}
				}
			}

			State = 519;
			Match(T__1);
			_localctx.resultado = new Llamadafunc ((_localctx.id!=null?_localctx.id.Line:0) , (_localctx.id!=null?_localctx.id.Column:0), (_localctx.id!=null?_localctx.id.Text:null), _localctx.a);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public override bool Sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
		switch (ruleIndex) {
		case 16: return exp_sempred((ExpContext)_localctx, predIndex);
		}
		return true;
	}
	private bool exp_sempred(ExpContext _localctx, int predIndex) {
		switch (predIndex) {
		case 0: return Precpred(Context, 27);
		case 1: return Precpred(Context, 26);
		case 2: return Precpred(Context, 25);
		case 3: return Precpred(Context, 24);
		case 4: return Precpred(Context, 23);
		case 5: return Precpred(Context, 21);
		case 6: return Precpred(Context, 20);
		}
		return true;
	}

	private static int[] _serializedATN = {
		4,1,66,523,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,
		7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,
		2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,1,0,1,0,1,0,5,0,42,8,0,10,0,12,
		0,45,9,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,3,1,55,8,1,1,2,1,2,1,2,1,2,1,
		2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,3,3,72,8,3,1,3,1,3,1,3,1,4,1,
		4,1,4,1,4,1,4,1,4,1,4,1,4,5,4,85,8,4,10,4,12,4,88,9,4,3,4,90,8,4,1,4,1,
		4,1,5,1,5,1,5,1,5,5,5,98,8,5,10,5,12,5,101,9,5,1,5,1,5,1,5,1,6,1,6,3,6,
		108,8,6,1,6,1,6,1,6,1,6,3,6,114,8,6,1,6,1,6,1,6,1,6,1,6,1,6,3,6,122,8,
		6,1,6,3,6,125,8,6,1,6,1,6,1,6,3,6,130,8,6,1,6,1,6,1,6,3,6,135,8,6,1,6,
		1,6,1,6,3,6,140,8,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,3,6,152,8,
		6,1,6,1,6,1,6,1,6,1,6,3,6,159,8,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,3,7,168,
		8,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,3,7,183,8,7,1,
		8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,3,8,
		202,8,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,4,8,211,8,8,11,8,12,8,212,1,8,1,8,
		1,8,1,8,3,8,219,8,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,3,9,231,8,
		9,3,9,233,8,9,1,9,1,9,1,10,1,10,1,10,1,10,3,10,241,8,10,1,10,1,10,1,10,
		1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,
		1,10,1,10,1,10,1,10,1,10,1,10,1,10,3,10,267,8,10,1,11,1,11,1,11,1,11,1,
		11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,5,12,283,8,12,10,12,12,
		12,286,9,12,1,12,1,12,5,12,290,8,12,10,12,12,12,293,9,12,1,12,1,12,1,12,
		1,12,1,12,1,12,5,12,301,8,12,10,12,12,12,304,9,12,1,12,3,12,307,8,12,1,
		13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,5,13,317,8,13,10,13,12,13,320,9,
		13,3,13,322,8,13,1,13,1,13,1,13,1,14,1,14,1,14,5,14,330,8,14,10,14,12,
		14,333,9,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,
		1,15,3,15,348,8,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,
		16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,
		16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,
		16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,
		16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,4,
		16,416,8,16,11,16,12,16,417,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,
		16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,
		16,1,16,1,16,1,16,3,16,446,8,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,
		1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,
		1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,5,16,
		483,8,16,10,16,12,16,486,9,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,5,17,
		495,8,17,10,17,12,17,498,9,17,3,17,500,8,17,1,17,1,17,1,17,1,18,1,18,1,
		18,1,18,1,18,1,18,1,18,1,18,5,18,513,8,18,10,18,12,18,516,9,18,3,18,518,
		8,18,1,18,1,18,1,18,1,18,0,1,32,19,0,2,4,6,8,10,12,14,16,18,20,22,24,26,
		28,30,32,34,36,0,5,1,0,17,19,2,0,16,16,20,20,1,0,21,22,1,0,23,24,1,0,25,
		26,583,0,43,1,0,0,0,2,54,1,0,0,0,4,56,1,0,0,0,6,63,1,0,0,0,8,89,1,0,0,
		0,10,93,1,0,0,0,12,158,1,0,0,0,14,182,1,0,0,0,16,218,1,0,0,0,18,220,1,
		0,0,0,20,266,1,0,0,0,22,268,1,0,0,0,24,291,1,0,0,0,26,308,1,0,0,0,28,331,
		1,0,0,0,30,347,1,0,0,0,32,445,1,0,0,0,34,487,1,0,0,0,36,504,1,0,0,0,38,
		39,3,2,1,0,39,40,6,0,-1,0,40,42,1,0,0,0,41,38,1,0,0,0,42,45,1,0,0,0,43,
		41,1,0,0,0,43,44,1,0,0,0,44,46,1,0,0,0,45,43,1,0,0,0,46,47,6,0,-1,0,47,
		1,1,0,0,0,48,49,3,4,2,0,49,50,6,1,-1,0,50,55,1,0,0,0,51,52,3,6,3,0,52,
		53,6,1,-1,0,53,55,1,0,0,0,54,48,1,0,0,0,54,51,1,0,0,0,55,3,1,0,0,0,56,
		57,5,37,0,0,57,58,5,36,0,0,58,59,5,1,0,0,59,60,5,2,0,0,60,61,3,10,5,0,
		61,62,6,2,-1,0,62,5,1,0,0,0,63,64,5,37,0,0,64,65,5,63,0,0,65,66,5,1,0,
		0,66,67,3,8,4,0,67,71,5,2,0,0,68,69,3,28,14,0,69,70,6,3,-1,0,70,72,1,0,
		0,0,71,68,1,0,0,0,71,72,1,0,0,0,72,73,1,0,0,0,73,74,3,10,5,0,74,75,6,3,
		-1,0,75,7,1,0,0,0,76,77,5,63,0,0,77,78,3,28,14,0,78,86,6,4,-1,0,79,80,
		5,3,0,0,80,81,5,63,0,0,81,82,3,28,14,0,82,83,6,4,-1,0,83,85,1,0,0,0,84,
		79,1,0,0,0,85,88,1,0,0,0,86,84,1,0,0,0,86,87,1,0,0,0,87,90,1,0,0,0,88,
		86,1,0,0,0,89,76,1,0,0,0,89,90,1,0,0,0,90,91,1,0,0,0,91,92,6,4,-1,0,92,
		9,1,0,0,0,93,99,5,4,0,0,94,95,3,12,6,0,95,96,6,5,-1,0,96,98,1,0,0,0,97,
		94,1,0,0,0,98,101,1,0,0,0,99,97,1,0,0,0,99,100,1,0,0,0,100,102,1,0,0,0,
		101,99,1,0,0,0,102,103,5,5,0,0,103,104,6,5,-1,0,104,11,1,0,0,0,105,107,
		3,36,18,0,106,108,5,6,0,0,107,106,1,0,0,0,107,108,1,0,0,0,108,109,1,0,
		0,0,109,110,6,6,-1,0,110,159,1,0,0,0,111,113,3,26,13,0,112,114,5,6,0,0,
		113,112,1,0,0,0,113,114,1,0,0,0,114,115,1,0,0,0,115,116,6,6,-1,0,116,159,
		1,0,0,0,117,121,5,43,0,0,118,119,3,32,16,0,119,120,6,6,-1,0,120,122,1,
		0,0,0,121,118,1,0,0,0,121,122,1,0,0,0,122,124,1,0,0,0,123,125,5,6,0,0,
		124,123,1,0,0,0,124,125,1,0,0,0,125,126,1,0,0,0,126,159,6,6,-1,0,127,129,
		5,41,0,0,128,130,5,6,0,0,129,128,1,0,0,0,129,130,1,0,0,0,130,131,1,0,0,
		0,131,159,6,6,-1,0,132,134,5,42,0,0,133,135,5,6,0,0,134,133,1,0,0,0,134,
		135,1,0,0,0,135,136,1,0,0,0,136,159,6,6,-1,0,137,139,3,14,7,0,138,140,
		5,6,0,0,139,138,1,0,0,0,139,140,1,0,0,0,140,141,1,0,0,0,141,142,6,6,-1,
		0,142,159,1,0,0,0,143,144,3,18,9,0,144,145,6,6,-1,0,145,159,1,0,0,0,146,
		147,3,20,10,0,147,148,6,6,-1,0,148,159,1,0,0,0,149,151,3,16,8,0,150,152,
		5,6,0,0,151,150,1,0,0,0,151,152,1,0,0,0,152,153,1,0,0,0,153,154,6,6,-1,
		0,154,159,1,0,0,0,155,156,3,22,11,0,156,157,6,6,-1,0,157,159,1,0,0,0,158,
		105,1,0,0,0,158,111,1,0,0,0,158,117,1,0,0,0,158,127,1,0,0,0,158,132,1,
		0,0,0,158,137,1,0,0,0,158,143,1,0,0,0,158,146,1,0,0,0,158,149,1,0,0,0,
		158,155,1,0,0,0,159,13,1,0,0,0,160,161,5,44,0,0,161,162,5,63,0,0,162,167,
		3,28,14,0,163,164,5,7,0,0,164,165,3,32,16,0,165,166,6,7,-1,0,166,168,1,
		0,0,0,167,163,1,0,0,0,167,168,1,0,0,0,168,169,1,0,0,0,169,170,6,7,-1,0,
		170,183,1,0,0,0,171,172,5,63,0,0,172,173,5,8,0,0,173,174,3,32,16,0,174,
		175,6,7,-1,0,175,183,1,0,0,0,176,177,5,63,0,0,177,178,5,8,0,0,178,179,
		3,28,14,0,179,180,3,32,16,0,180,181,6,7,-1,0,181,183,1,0,0,0,182,160,1,
		0,0,0,182,171,1,0,0,0,182,176,1,0,0,0,183,15,1,0,0,0,184,201,5,63,0,0,
		185,186,5,7,0,0,186,187,3,32,16,0,187,188,6,8,-1,0,188,202,1,0,0,0,189,
		190,5,9,0,0,190,191,3,32,16,0,191,192,6,8,-1,0,192,202,1,0,0,0,193,194,
		5,10,0,0,194,195,3,32,16,0,195,196,6,8,-1,0,196,202,1,0,0,0,197,198,5,
		11,0,0,198,202,6,8,-1,0,199,200,5,12,0,0,200,202,6,8,-1,0,201,185,1,0,
		0,0,201,189,1,0,0,0,201,193,1,0,0,0,201,197,1,0,0,0,201,199,1,0,0,0,202,
		203,1,0,0,0,203,219,6,8,-1,0,204,210,5,63,0,0,205,206,5,13,0,0,206,207,
		3,32,16,0,207,208,5,14,0,0,208,209,6,8,-1,0,209,211,1,0,0,0,210,205,1,
		0,0,0,211,212,1,0,0,0,212,210,1,0,0,0,212,213,1,0,0,0,213,214,1,0,0,0,
		214,215,5,7,0,0,215,216,3,32,16,0,216,217,6,8,-1,0,217,219,1,0,0,0,218,
		184,1,0,0,0,218,204,1,0,0,0,219,17,1,0,0,0,220,221,5,45,0,0,221,222,3,
		32,16,0,222,232,3,10,5,0,223,230,5,48,0,0,224,225,3,10,5,0,225,226,6,9,
		-1,0,226,231,1,0,0,0,227,228,3,18,9,0,228,229,6,9,-1,0,229,231,1,0,0,0,
		230,224,1,0,0,0,230,227,1,0,0,0,231,233,1,0,0,0,232,223,1,0,0,0,232,233,
		1,0,0,0,233,234,1,0,0,0,234,235,6,9,-1,0,235,19,1,0,0,0,236,240,5,46,0,
		0,237,238,3,32,16,0,238,239,6,10,-1,0,239,241,1,0,0,0,240,237,1,0,0,0,
		240,241,1,0,0,0,241,242,1,0,0,0,242,243,3,10,5,0,243,244,6,10,-1,0,244,
		267,1,0,0,0,245,246,5,46,0,0,246,247,5,63,0,0,247,248,5,8,0,0,248,249,
		3,32,16,0,249,250,5,6,0,0,250,251,3,32,16,0,251,252,5,6,0,0,252,253,3,
		16,8,0,253,254,3,10,5,0,254,255,6,10,-1,0,255,267,1,0,0,0,256,257,5,46,
		0,0,257,258,5,63,0,0,258,259,5,3,0,0,259,260,5,63,0,0,260,261,5,8,0,0,
		261,262,5,49,0,0,262,263,3,32,16,0,263,264,3,10,5,0,264,265,6,10,-1,0,
		265,267,1,0,0,0,266,236,1,0,0,0,266,245,1,0,0,0,266,256,1,0,0,0,267,21,
		1,0,0,0,268,269,5,47,0,0,269,270,3,32,16,0,270,271,5,4,0,0,271,272,3,24,
		12,0,272,273,5,5,0,0,273,274,6,11,-1,0,274,23,1,0,0,0,275,276,6,12,-1,
		0,276,277,5,50,0,0,277,278,3,32,16,0,278,284,5,15,0,0,279,280,3,12,6,0,
		280,281,6,12,-1,0,281,283,1,0,0,0,282,279,1,0,0,0,283,286,1,0,0,0,284,
		282,1,0,0,0,284,285,1,0,0,0,285,287,1,0,0,0,286,284,1,0,0,0,287,288,6,
		12,-1,0,288,290,1,0,0,0,289,275,1,0,0,0,290,293,1,0,0,0,291,289,1,0,0,
		0,291,292,1,0,0,0,292,306,1,0,0,0,293,291,1,0,0,0,294,295,6,12,-1,0,295,
		296,5,51,0,0,296,302,5,15,0,0,297,298,3,12,6,0,298,299,6,12,-1,0,299,301,
		1,0,0,0,300,297,1,0,0,0,301,304,1,0,0,0,302,300,1,0,0,0,302,303,1,0,0,
		0,303,305,1,0,0,0,304,302,1,0,0,0,305,307,6,12,-1,0,306,294,1,0,0,0,306,
		307,1,0,0,0,307,25,1,0,0,0,308,309,5,35,0,0,309,321,5,1,0,0,310,311,3,
		32,16,0,311,318,6,13,-1,0,312,313,5,3,0,0,313,314,3,32,16,0,314,315,6,
		13,-1,0,315,317,1,0,0,0,316,312,1,0,0,0,317,320,1,0,0,0,318,316,1,0,0,
		0,318,319,1,0,0,0,319,322,1,0,0,0,320,318,1,0,0,0,321,310,1,0,0,0,321,
		322,1,0,0,0,322,323,1,0,0,0,323,324,5,2,0,0,324,325,6,13,-1,0,325,27,1,
		0,0,0,326,327,5,13,0,0,327,328,5,14,0,0,328,330,6,14,-1,0,329,326,1,0,
		0,0,330,333,1,0,0,0,331,329,1,0,0,0,331,332,1,0,0,0,332,334,1,0,0,0,333,
		331,1,0,0,0,334,335,3,30,15,0,335,336,6,14,-1,0,336,29,1,0,0,0,337,338,
		5,30,0,0,338,348,6,15,-1,0,339,340,5,31,0,0,340,348,6,15,-1,0,341,342,
		5,32,0,0,342,348,6,15,-1,0,343,344,5,34,0,0,344,348,6,15,-1,0,345,346,
		5,33,0,0,346,348,6,15,-1,0,347,337,1,0,0,0,347,339,1,0,0,0,347,341,1,0,
		0,0,347,343,1,0,0,0,347,345,1,0,0,0,348,31,1,0,0,0,349,350,6,16,-1,0,350,
		351,5,16,0,0,351,352,3,32,16,28,352,353,6,16,-1,0,353,446,1,0,0,0,354,
		355,5,27,0,0,355,356,3,32,16,22,356,357,6,16,-1,0,357,446,1,0,0,0,358,
		359,5,52,0,0,359,360,5,1,0,0,360,361,3,32,16,0,361,362,5,2,0,0,362,363,
		6,16,-1,0,363,446,1,0,0,0,364,365,5,53,0,0,365,366,5,1,0,0,366,367,3,32,
		16,0,367,368,5,2,0,0,368,369,6,16,-1,0,369,446,1,0,0,0,370,371,5,54,0,
		0,371,372,5,1,0,0,372,373,3,32,16,0,373,374,5,2,0,0,374,375,6,16,-1,0,
		375,446,1,0,0,0,376,377,5,57,0,0,377,378,5,1,0,0,378,379,3,32,16,0,379,
		380,5,2,0,0,380,381,6,16,-1,0,381,446,1,0,0,0,382,383,5,55,0,0,383,384,
		5,1,0,0,384,385,3,32,16,0,385,386,5,3,0,0,386,387,3,32,16,0,387,388,5,
		2,0,0,388,389,6,16,-1,0,389,446,1,0,0,0,390,391,5,58,0,0,391,392,5,1,0,
		0,392,393,3,32,16,0,393,394,5,3,0,0,394,395,3,32,16,0,395,396,5,2,0,0,
		396,397,6,16,-1,0,397,446,1,0,0,0,398,399,5,56,0,0,399,400,5,1,0,0,400,
		401,3,32,16,0,401,402,5,3,0,0,402,403,3,32,16,0,403,404,5,2,0,0,404,405,
		6,16,-1,0,405,446,1,0,0,0,406,407,3,36,18,0,407,408,6,16,-1,0,408,446,
		1,0,0,0,409,415,5,63,0,0,410,411,5,13,0,0,411,412,3,32,16,0,412,413,5,
		14,0,0,413,414,6,16,-1,0,414,416,1,0,0,0,415,410,1,0,0,0,416,417,1,0,0,
		0,417,415,1,0,0,0,417,418,1,0,0,0,418,419,1,0,0,0,419,420,6,16,-1,0,420,
		446,1,0,0,0,421,422,5,63,0,0,422,446,6,16,-1,0,423,424,5,61,0,0,424,446,
		6,16,-1,0,425,426,5,62,0,0,426,446,6,16,-1,0,427,428,5,60,0,0,428,446,
		6,16,-1,0,429,430,5,59,0,0,430,446,6,16,-1,0,431,432,5,38,0,0,432,446,
		6,16,-1,0,433,434,5,39,0,0,434,446,6,16,-1,0,435,436,5,40,0,0,436,446,
		6,16,-1,0,437,438,3,34,17,0,438,439,6,16,-1,0,439,446,1,0,0,0,440,441,
		5,1,0,0,441,442,3,32,16,0,442,443,5,2,0,0,443,444,6,16,-1,0,444,446,1,
		0,0,0,445,349,1,0,0,0,445,354,1,0,0,0,445,358,1,0,0,0,445,364,1,0,0,0,
		445,370,1,0,0,0,445,376,1,0,0,0,445,382,1,0,0,0,445,390,1,0,0,0,445,398,
		1,0,0,0,445,406,1,0,0,0,445,409,1,0,0,0,445,421,1,0,0,0,445,423,1,0,0,
		0,445,425,1,0,0,0,445,427,1,0,0,0,445,429,1,0,0,0,445,431,1,0,0,0,445,
		433,1,0,0,0,445,435,1,0,0,0,445,437,1,0,0,0,445,440,1,0,0,0,446,484,1,
		0,0,0,447,448,10,27,0,0,448,449,7,0,0,0,449,450,3,32,16,28,450,451,6,16,
		-1,0,451,483,1,0,0,0,452,453,10,26,0,0,453,454,7,1,0,0,454,455,3,32,16,
		27,455,456,6,16,-1,0,456,483,1,0,0,0,457,458,10,25,0,0,458,459,7,2,0,0,
		459,460,3,32,16,26,460,461,6,16,-1,0,461,483,1,0,0,0,462,463,10,24,0,0,
		463,464,7,3,0,0,464,465,3,32,16,25,465,466,6,16,-1,0,466,483,1,0,0,0,467,
		468,10,23,0,0,468,469,7,4,0,0,469,470,3,32,16,24,470,471,6,16,-1,0,471,
		483,1,0,0,0,472,473,10,21,0,0,473,474,5,28,0,0,474,475,3,32,16,22,475,
		476,6,16,-1,0,476,483,1,0,0,0,477,478,10,20,0,0,478,479,5,29,0,0,479,480,
		3,32,16,21,480,481,6,16,-1,0,481,483,1,0,0,0,482,447,1,0,0,0,482,452,1,
		0,0,0,482,457,1,0,0,0,482,462,1,0,0,0,482,467,1,0,0,0,482,472,1,0,0,0,
		482,477,1,0,0,0,483,486,1,0,0,0,484,482,1,0,0,0,484,485,1,0,0,0,485,33,
		1,0,0,0,486,484,1,0,0,0,487,499,5,4,0,0,488,489,3,32,16,0,489,496,6,17,
		-1,0,490,491,5,3,0,0,491,492,3,32,16,0,492,493,6,17,-1,0,493,495,1,0,0,
		0,494,490,1,0,0,0,495,498,1,0,0,0,496,494,1,0,0,0,496,497,1,0,0,0,497,
		500,1,0,0,0,498,496,1,0,0,0,499,488,1,0,0,0,499,500,1,0,0,0,500,501,1,
		0,0,0,501,502,5,5,0,0,502,503,6,17,-1,0,503,35,1,0,0,0,504,505,5,63,0,
		0,505,517,5,1,0,0,506,507,3,32,16,0,507,514,6,18,-1,0,508,509,5,3,0,0,
		509,510,3,32,16,0,510,511,6,18,-1,0,511,513,1,0,0,0,512,508,1,0,0,0,513,
		516,1,0,0,0,514,512,1,0,0,0,514,515,1,0,0,0,515,518,1,0,0,0,516,514,1,
		0,0,0,517,506,1,0,0,0,517,518,1,0,0,0,518,519,1,0,0,0,519,520,5,2,0,0,
		520,521,6,18,-1,0,521,37,1,0,0,0,40,43,54,71,86,89,99,107,113,121,124,
		129,134,139,151,158,167,182,201,212,218,230,232,240,266,284,291,302,306,
		318,321,331,347,417,445,482,484,496,499,514,517
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
